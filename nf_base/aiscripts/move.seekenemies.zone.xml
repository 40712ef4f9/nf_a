<?xml version="1.0" encoding="iso-8859-1" ?>
<aiscript name="move.seekenemies.zone" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="4">
  <params>
    <param name="destination"/>
    <param name="pos"/>
    <param name="engageenemies" default="true" comment="When moving, scan for and engage enemies"/>
    <param name="idle" default="false" comment="When finished, idle around the area still seeking enemies"/>
    <param name="idledistance" default="this.ship.size + 5km" comment="distance from $pos to idle around"/>
    <param name="onlyinrange" default="true" />
    <param name="escort" default="null" comment="Objects to escort - stay at 'pursuedistance' and shoot enemies attacking this" />
    <param name="pursuedistance" default="this.ship.maxradarrange" comment="Distance to pursue/escort (if pursuetargets true or 'escort' provided). Default: max radar range" />
    <param name="allowstations" default="true" comment="Acquire stations as targets? Passed to move.seekenemies." />
    <param name="debugoutputchance" default="0" />
  </params>
  <interrupts>
    <handler ref="AttackHandler" />
    <handler ref="ScannedHandler" />
  </interrupts>
  <patch sinceversion="3">
    <do_if value="not $allowstations?">
      <set_value name="$allowstations" exact="true"/>
    </do_if>
  </patch>
  <patch sinceversion="4" early="true">
    <do_if value="$escort.isoperational">
      <set_value name="$referenceobject" exact="$escort"/>
    </do_if>
    <do_else>
      <set_value name="$referenceobject" exact="this.ship"/>
    </do_else>
  </patch>
  <attention min="unknown">
    <actions>

      <!-- If is Capital ship or has a very long range (acts as capital ship) -->
      <set_value name="$capship" exact="this.ship.isclass.ship_l or this.ship.isclass.ship_xl or this.ship.maxcombatrange.all gt 5000km" />
      <set_value name="$enemy" exact="null" />

      <run_script name="'move.undock'" sinceversion="2" />

      <create_position name="$targetpos" value="$pos"/>

      <label name="start" />

      <do_if value="not $destination.exists">
        <!-- early out in case destination is a tempzone and got cleaned up -->
        <debug_text text="'No destination'" chance="$debugoutputchance"/>
        <return/>
      </do_if>

      <do_if value="$destination.isclass.zone and this.zone != $destination">
        <run_script name="if @global.$WWX_mmcarrier_is_active and not (not @global.$mmcarrierconfig.$mm_carriers_ad_glob or @this.ship.pilot.$mm_carriers_ad) then 'move.generic.carrier' else 'move.generic'" >
          <param name="destination" value="$destination" />
          <param name="endintargetzone" value="true" />
        </run_script>
      </do_if>

      <do_if value="not $idle">
        <do_if value="this.ship.distanceto.[$destination, $pos]" max="this.ship.size * 2" comment="use the same distance in 'move.patrol'">
          <debug_text text="'Not idle'" chance="$debugoutputchance"/>
          <return/>
        </do_if>
      </do_if>

      <!-- move to a random (safe) position, looking for enemies along the way -->
      <label name="moveto" />
      <set_value name="$destinationZone" exact="if not $destination.exists then this.zone else if $destination.isclass.zone then $destination else $destination.zone" />
      <do_if value="$escort.isoperational">
        <set_value name="$referenceobject" exact="$escort"/>
      </do_if>
      <do_else>
        <set_value name="$referenceobject" exact="this.ship"/>
      </do_else>

      <debug_text text="'Gametime: ' + player.age + ' Starting moveto to ' + $destination.knownname + ' Position: ' + $pos" chance="$debugoutputchance" />

      <!-- Script Compatibility -->
      <move_to object="this.ship" destination="this.zone" chance="0" />
      <move_to object="this.ship" destination="this.zone" chance="0" />
      <move_to object="this.ship" destination="this.zone" chance="0" />
      
      <move_to object="this.ship" destination="$destination" finishonapproach="true" usehighways="not $capship" forceposition="false" forcesteering="not $capship">
        <position value="$targetpos" />
        <interrupt>
          <conditions>
            <check_any>
              <!-- Object being escorted is destroyed, abandoned, or changes owner. -->
              <check_all>
                <check_any>
                  <event_object_destroyed object="$referenceobject"/>
                  <event_object_abandoned object="$referenceobject"/>
                  <event_object_changed_owner object="$referenceobject"/>
                </check_any>
              </check_all>
              <!-- Found enemy in gravidar (if $engageenemies true) -->
              <check_all>
                <event_gravidar_has_scanned object="this.ship" />
                <check_value value="$engageenemies" />
                <check_value value="not this.zone.isclass.highway" />
                <check_any>
                  <!-- If capital ship -->
                  <check_all>
                    <check_value value="$capship" />
                    <check_any>
                      <!-- First search for capitals -->
                      <count_gravidar_contacts result="$capitalenemies" object="this.ship" class="[class.ship_l,class.ship_xl]" functional="true" maybeattackedby="this.ship" min="1">
                        <match_distance object="$referenceobject" max="@$pursuedistance"/>
                        <match_parent>
                          <match macro="$destinationZone.macro" />
                        </match_parent>
                      </count_gravidar_contacts>
                      <!-- Second search for Stations -->
                      <check_all>
                        <check_value value="$allowstations"/>
                        <count_gravidar_contacts result="$stationenemies" object="this.ship" class="class.station" functional="true" maybeattackedby="this.ship" min="1">
                          <match_parent>
                            <match macro="$destinationZone.macro" />
                          </match_parent>
                          <match_distance object="$referenceobject" max="@$pursuedistance"/>
                        </count_gravidar_contacts>
                      </check_all>
                      <!-- Third search for rest (small, ..) -->
                      <count_gravidar_contacts result="$smallenemies" object="this.ship" class="[class.ship_m, class.ship_s]" functional="true" maybeattackedby="this.ship" min="1">
                        <match_parent>
                          <match class="class.highway" negate="true"/>
                          <match macro="$destinationZone.macro" />
                        </match_parent>
                        <match_distance object="this.ship" max="@$pursuedistance"/>
                      </count_gravidar_contacts>
                    </check_any>
                  </check_all>
                  <!-- If NOT capital ship -->
                  <check_all>
                    <check_value value="not $capship" />
                    <check_any>
                      <!-- First search for small/medium -->
                      <count_gravidar_contacts result="$smallenemies" object="this.ship" class="[class.ship_m, class.ship_s]" functional="true" maybeattackedby="this.ship" min="1">
                        <match_parent>
                          <match class="class.highway" negate="true"/>
                          <match macro="$destinationZone.macro" />
                        </match_parent>
                        <match_distance object="this.ship" max="@$pursuedistance"/>
                      </count_gravidar_contacts>
                      <!-- Second search for capitals -->
                      <count_gravidar_contacts result="$capitalenemies" object="this.ship" class="[class.ship_l,class.ship_xl]"  functional="true" maybeattackedby="this.ship" min="1">
                        <match_distance object="this.ship" max="@$pursuedistance"/>
                        <match_parent>
                          <match macro="$destinationZone.macro" />
                        </match_parent>
                      </count_gravidar_contacts>
                      <!-- Rest of enemies -->
                      <count_gravidar_contacts result="$restenemies" object="this.ship" functional="true" maybeattackedby="this.ship" min="1">
                        <match class="if $allowstations then [class.station, class.ship] else class.ship"/>
                        <match_distance object="this.ship" max="@$pursuedistance"/>
                        <match_parent>
                          <match macro="$destinationZone.macro" />
                        </match_parent>
                      </count_gravidar_contacts>
                    </check_any>
                  </check_all>
                </check_any>
              </check_all>
              <!-- Enemy reported by police -->
              <check_all>
                <event_object_signalled object="this.sector" param="'police'" check="false" comment="allow sector to be null if action is started/restarted in superhighway" />
                <check_value value="this.sector.exists" />
                <check_value value="$engageenemies" />
                <check_value value="event.param2.isoperational" />
                <check_value value="event.param2.zone.policefaction"/>
                <check_value value="not this.hasrelation.enemy.{event.param2.zone.policefaction}" comment="Check that the police faction is not an enemy"/>
                <check_value value="event.param2.distanceto.{this.ship}" max="this.ship.maxradarrange" />
                <check_value value="event.param2.owner != this.owner" />
              </check_all>
              <!-- On attention level change -->
              <check_all>
                <event_object_changed_attention object="this.ship" />
                <check_value value="(event.param ge attention.visible) and (event.param2 lt attention.visible)" />
              </check_all>
            </check_any>
          </conditions>
          <actions>
            <debug_text text="'Gametime: ' + player.age + ' Moveto interrupted by: ' + event.name" chance="$debugoutputchance"/>
            <do_if value="event.name" exact="'event_gravidar_has_scanned'">
              <!-- Select enemey based on the count gravidar already triggered -->
              <do_if value="$smallenemies?">
                <!-- Select small random enemy -->
                <set_value name="$enemy" exact="$smallenemies.random" />
              </do_if>
              <do_elseif value="$capitalenemies?">
                <!-- Select nearest capship -->
                <debug_text text="'capitalenemies: ' + $capitalenemies" chance="$debugoutputchance"/>
                <set_value name="$enemy" exact="$capitalenemies.{1}"/>
                <set_value name="$NearestDistance" exact="this.ship.distanceto.{$enemy}"/>
                <do_all exact="$capitalenemies.count" counter="$DistanceCounter">
                  <do_if value="$DistanceCounter" min="2">
                    <set_value name="$tempdist" exact="this.ship.distanceto.{$capitalenemies.{$DistanceCounter}}" />
                    <do_if value="$tempdist" max="$NearestDistance">
                      <set_value name="$enemy" exact="$capitalenemies.{$DistanceCounter}"/>
                      <set_value name="$NearestDistance" exact="$tempdist"/>
                    </do_if>
                  </do_if>
                </do_all>
              </do_elseif>
              <do_elseif value="$stationenemies?">
                <!-- random station -->
                <set_value name="$enemy" exact="$stationenemies.random"/>
              </do_elseif>
              <do_elseif value="$restenemies?">
                <!-- random enemy (could be everything) -->
                <set_value name="$enemy" exact="$restenemies.random"/>
              </do_elseif>

              <debug_text text="'enemy: ' + $enemy.knownname" chance="$debugoutputchance"/>

              <!-- remove temp vars -->
              <remove_value name="$NearestDistance"/>
              <remove_value name="$DistanceCounter"/>
              <remove_value name="$tempdist"/>
              <remove_value name="$smallenemies"/>
              <remove_value name="$capitalenemies"/>
              <remove_value name="$stationenemies"/>
              <remove_value name="$restenemies"/>
            
            </do_if>
            <do_elseif value="event.name" exact="'event_object_signalled'">
              <set_value name="$enemy" exact="event.param2" />
              <add_relation_boost object="this" otherobject="$enemy" value="-0.1" decay="1" delay="10min" />
              <debug_text text="'reported by police. Enemy: ' + $enemy.knownname" chance="$debugoutputchance" />
            </do_elseif>
            <do_elseif value="event.name" exact="'event_object_changed_attention'">
              <resume label="start" />
            </do_elseif>
          </actions>
        </interrupt>
      </move_to>      
      
      <label name="attack" />
      <do_if value="$enemy.isoperational">

        <add_to_group groupname="$followers" list="this.ship.subordinates" />
        <signal_objects group="$followers" param="'attack'" param2="$enemy" />
        <run_script name="'fight.attack.object'">
          <param name="target" value="$enemy "/>
          <param name="escort" value="@$escort" />
          <param name="pursuedistance" value="@$pursuedistance" />
          <param name="pursuetargets" value="not @$onlyinrange" />
          <param name="debugoutputchance" value="$debugoutputchance" />
        </run_script>

      </do_if>
      <do_elseif value="$engageenemies">
        <debug_text text="'No enemy found, moving to a new position'" chance="$debugoutputchance" />
      </do_elseif>

      <do_if value="$idle">
        <create_position name="$targetpos" value="$pos" max="$idledistance"/>
        <resume label="moveto"/>
      </do_if>

      <!-- Script Compatibility -->
      <wait chance="0"/>
      <move_to object="this.ship" destination="this.zone" chance="0" />
      <wait chance="0"/>
      <run_script name="''" chance="0" />
      
    </actions>
  </attention>
</aiscript>