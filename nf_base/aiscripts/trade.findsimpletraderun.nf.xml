<?xml version="1.0" encoding="iso-8859-1" ?>
<aiscript name="trade.findsimpletraderun.nf" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="2">
  <params>
    <param name="warelist" />
    <param name="range" />
    <param name="sellrange" default="null"/>
    <param name="buyrange" default="null"/>
    <param name="lasttrade" default="null" comment="list: [$buyoffer, $ware, $tradepartner]"/>
    <param name="commander" default="null" />
    <param name="customerfaction" default="this.ship.trueowner" />
    <param name="debugchance" default="0"/>
    <param name="debugchance2" default="0" comment="more spammy"/>
  </params>
  <init>
    <set_command_action commandaction="commandaction.searchingtrades" />
  </init>
  <patch sinceversion="1">
    <set_value name="$buyoffer" exact="null" />
  </patch>
  <patch sinceversion="2">
    <set_value name="$commander" exact="null"/>
    <set_value name="$customerfaction" exact="this.ship.trueowner"/>
  </patch>
  <attention min="unknown">
    <actions>

      <!-- set up initial state for trade runs -->
      <label name="start" />
      <set_value name="$selloffer" exact="null" />
      <set_value name="$buyoffer" exact="null" />
      <set_value name="$currentcargo" exact="this.ship.cargo.list" />

      <!-- strip fuel cells for own need from the list -->
      <do_if value="$warelist.indexof.{ware.fuelcells} and ((this.ship.isclass.[class.ship_l, class.ship_xl] and this.ship.cargo.{ware.fuelcells}.max gt 2500) or (this.ship.isclass.[class.ship_m, class.ship_s] and this.ship.cargo.{ware.fuelcells}.max))">
        <!-- TODO: fuel trade ship needs to keep some for own use and the rest for trading -->
      </do_if>
      <do_elseif value="not $warelist.indexof.{ware.fuelcells}">
        <set_value name="$fuelindex" exact="$currentcargo.indexof.{ware.fuelcells}" />
        <do_if value="$fuelindex">
          <remove_value name="$currentcargo.{$fuelindex}" />
        </do_if>
      </do_elseif>
      <do_else>
        <set_value name="$fuelindex" exact="$currentcargo.indexof.{ware.fuelcells}" />
        <do_if value="$fuelindex and this.ship.cargo.{ware.fuelcells}.count le 500">
          <remove_value name="$currentcargo.{$fuelindex}" />
        </do_if>
      </do_else>

      <debug_text text="player.age + ' finding trade offer; range: ' + $range.knownname" chance="$debugchance" />
      <debug_text text="player.age + ' current cargo: ' + $currentcargo" chance="$debugchance" />

      <label name="find trade run" />

      <do_if value="$currentcargo.count gt 0 and this.ship.cargo.capacity gt 0 and (this.ship.cargo.free / this.ship.cargo.capacity) lt 0.20f">
        <debug_text text="player.age + ' look for buy offers'" chance="$debugchance" />
        <create_list name="$buyoffers" />
        <!-- own CV -->
        <find_buy_offer tradepartner="this.ship" wares="$currentcargo" space="$range" result="$buyoffers" chance="if ['acmecorp', 'deepwater'].indexof.{$customerfaction.id} then 0 else 100">
          <match_buyer owner="$customerfaction">
            <match class="class.ship_xl" />
          </match_buyer>
        </find_buy_offer>
        <!-- any CV -->
        <find_buy_offer tradepartner="this.ship" wares="$currentcargo" space="$range" result="$buyoffers" chance="100 - $buyoffer.available*100">
          <match_buyer>
            <match class="class.ship_xl" />
          </match_buyer>
        </find_buy_offer>
        <!-- own trades any -->
        <do_if value="['acmecorp', 'deepwater'].indexof.{$customerfaction.id}">
          <find_buy_offer tradepartner="this.ship" wares="$currentcargo" result="$buyoffer" space="$range" chance="100 - $buyoffer.available*100">
            <match_buyer>
              <match negate="true" class="class.ship_xl" />
              <match negate="true" owner="faction.acmecorp" />
              <match negate="true" owner="faction.deepwater" />
            </match_buyer>
            <stocklevel max="0.5f" />
          </find_buy_offer>
          <!-- default -->
          <find_buy_offer tradepartner="this.ship" wares="$currentcargo" result="$buyoffer" space="$range" chance="100 - $buyoffer.available*100">
            <stocklevel max="0.8f" />
            <match_buyer>
              <match negate="true" owner="faction.acmecorp" />
              <match negate="true" owner="faction.deepwater" />
            </match_buyer>
          </find_buy_offer>
        </do_if>
        <do_else>
          <find_buy_offer tradepartner="this.ship" wares="$currentcargo" result="$buyoffer" space="$range" chance="100 - $buyoffer.available*100">
            <match_buyer owner="$customerfaction">
              <match negate="true" class="class.ship_xl" />
            </match_buyer>
            <stocklevel max="0.5f" />
          </find_buy_offer>
          <!-- default -->
          <find_buy_offer tradepartner="this.ship" wares="$currentcargo" result="$buyoffer" space="$range" chance="100 - $buyoffer.available*100">
            <stocklevel max="0.5f" />
          </find_buy_offer>
        </do_else>
        <do_if value="$buyoffer.available">
          <debug_text text="player.age + ': sell to %1[%2] (max %3)'.[$buyoffer.buyer.knownname, $buyoffer.buyer, $buyoffer.offeramount.{this}]" chance="$debugchance" />
          <resume label="finish" />
        </do_if>
      </do_if>
      <do_else>
        <debug_text text="player.age + ' look for sell offers'" chance="$debugchance" />
        <create_list name="$selloffers" />
        <!-- own trades -->
        <do_if value="['acmecorp', 'deepwater'].indexof.{$customerfaction.id}">
          <find_sell_offer tradepartner="this.ship" wares="$warelist" result="$selloffers" multiple="true" space="$range">
            <match_seller>
              <match negate="true" owner="faction.acmecorp" />
              <match negate="true" owner="faction.deepwater" />
            </match_seller>
            <stocklevel min="0.5f" />
          </find_sell_offer>
          <!-- default -->
          <find_sell_offer tradepartner="this.ship" wares="$warelist" result="$selloffers" multiple="true" space="$range" chance="100 - ($selloffers.count gt 0)*100">
            <stocklevel min="0.2f" />
            <match_seller>
              <match negate="true" owner="faction.acmecorp" />
              <match negate="true" owner="faction.deepwater" />
            </match_seller>
          </find_sell_offer>
        </do_if>
        <do_else>
          <find_sell_offer tradepartner="this.ship" wares="$warelist" result="$selloffers" multiple="true" space="$range">
            <match_seller owner="$customerfaction" />
            <stocklevel min="0.5f" />
          </find_sell_offer>
          <!-- default -->
          <find_sell_offer tradepartner="this.ship" wares="$warelist" result="$selloffers" multiple="true" space="$range" chance="100 - ($selloffers.count gt 0)*100">
            <stocklevel min="0.5f" />
          </find_sell_offer>
        </do_else>
        <!-- expensive ware -->
        <do_if value="false">
          <!-- shipparts -->
        </do_if>
        <debug_text text="player.age + ': found %1 selloffers for wares %2 in %3'.[$selloffers.count, $warelist, $range]" chance="$debugchance" />
        <do_if value="$selloffers.count gt 0">
          <create_list name="$tradewareoffers" />
          <create_list name="$productionoffers" />
          <do_all exact="$selloffers.count" counter="$i">
            <set_value name="$currentoffer" exact="$selloffers.{$i}" />
            <do_if value="$currentoffer.available">
              <do_if value="@$lasttrade and $lasttrade.{1} and $lasttrade.{2} == $currentoffer.ware and $lasttrade.{3} == $currentoffer.seller">
                <!-- the last thing we did was sell this ware to the seller, don't buy it back immediately! -->
                <debug_text text="'we just sold %1 to %2 (%3), don\'t try to buy it right back!'.[$lasttrade.{2}, $lasttrade.{3}.knownname, $lasttrade.{3}]" chance="$debugchance2"/>
                <continue />
              </do_if>
              <do_if value="this.ship.cargo.{$currentoffer.ware}.free lt 1">
                <!-- if we have no space for this ware, skip the offer -->
                <continue />
              </do_if>
              <do_if value="$currentoffer.seller.tradewares.{$currentoffer.ware}.exists">
                <append_to_list name="$tradewareoffers" exact="$currentoffer" />
              </do_if>
              <do_else>
                <append_to_list name="$productionoffers" exact="$currentoffer" />
              </do_else>
            </do_if>
            <wait min="player.timewarp.factor*1" max="player.timewarp.factor*7"/>
          </do_all>
          <debug_text text="player.age + ': found %1 tradewareoffers and %2 productionoffers'.[$tradewareoffers.count, $productionoffers.count]" chance="$debugchance" />
          <do_if value="$tradewareoffers.count gt 0">
            <!-- ensure that the offers we are trying to use are still valid because they may have become unavailable during the wait! -->
            <set_value name="$offerindex" min="1" max="$tradewareoffers.count"/>
            <do_while value="$offerindex? and not $tradewareoffers.{$offerindex}.available">
              <remove_value name="$tradewareoffers.{$offerindex}"/>
              <do_if value="$tradewareoffers.count == 0">
                <remove_value name="$offerindex"/>
              </do_if>
              <do_else>
                <set_value name="$offerindex" min="1" max="$tradewareoffers.count"/>
              </do_else>
            </do_while>
            <do_if value="$offerindex?">
              <set_value name="$selloffer" exact="$tradewareoffers.{$offerindex}" />
              <resume label="finish" />
            </do_if>
          </do_if>
          <!-- if we haven't found a valid tradewareoffer, try productionoffers -->
          <do_if value="$productionoffers.count gt 0">
            <!-- ensure that the offers we are trying to use are still valid because they may have become unavailable during the wait! -->
            <set_value name="$offerindex" min="1" max="$productionoffers.count"/>
            <do_while value="$offerindex? and not $productionoffers.{$offerindex}.available">
              <remove_value name="$productionoffers.{$offerindex}"/>
              <do_if value="$productionoffers.count == 0">
                <remove_value name="$offerindex"/>
              </do_if>
              <do_else>
                <set_value name="$offerindex" min="1" max="$productionoffers.count"/>
              </do_else>
            </do_while>
            <do_if value="$offerindex?">
              <set_value name="$selloffer" exact="$productionoffers.{$offerindex}" />
              <set_value name="$ware" exact="$selloffer.ware"/>
              <debug_text text="player.age + ': %1[%2] buy %3 (max %4) from %5[%6]'.[this.ship.knownname, this.ship, $ware.name, $selloffer.offeramount.{this}, $selloffer.seller.knownname, $selloffer.seller]" chance="$debugchance" />
              <find_buy_offer tradepartner="this.ship" wares="$ware" result="$buyoffers" space="$range" multiple="true" >
                <match_buyer>
                  <match negate="true" owner="faction.acmecorp" />
                  <match negate="true" owner="faction.deepwater" />
                </match_buyer>
              </find_buy_offer>
              <do_all exact="$buyoffers.count" counter="$i" reverse="true">
                <do_if value="$buyoffers.{$i}.buyer == $selloffer.seller">
                  <!-- skip offers where buyer and seller are the same! -->
                  <remove_value name="$buyoffers.{$i}" />
                </do_if>
              </do_all>
              <do_if value="$buyoffers.count gt 0">
                <set_value name="$buyoffer" exact="$buyoffers.random"/>
              </do_if>
              <remove_value name="$buyoffers"/>
              <do_if value="$buyoffer.available">
                <debug_text text="player.age + ': sell to %1[%2] (max %3)'.[$buyoffer.buyer.knownname, $buyoffer.buyer, $buyoffer.offeramount.{this}]" chance="$debugchance" />
              </do_if>
              <remove_value name="$ware" />
              <resume label="finish" />
            </do_if>
          </do_if>
          <remove_value name="$tradewareoffers" />
          <remove_value name="$productionoffers" />
        </do_if>
      </do_else>

      <!-- can't find anything good at the moment... wait a while, then check again -->
      <debug_text text="player.age + ' no good trade offer found, waiting for a while before checking again'" chance="$debugchance" />
      <debug_text text="player.age + ' no good trade offer found. \'%1\'(job: \'%3\'), selloffers: \'%2\''.[this.ship.knownname, @$selloffers, this.ship.job]" chance="$debugchance2" />

      <!-- if we haven't found any suitable tradeoffer travel to another random zone in the range before trying again -->
      <do_if value="(not $range.isclass.zone) and (not this.ship.isplayerowned)">
        <find_zone name="$idlezone" space="$range" priorityzone="true" tempzone="false">
          <match macro="this.zone.macro" negate="true" />
        </find_zone>
        <do_if value="$idlezone.exists">
          <run_script name="'move.generic'">
            <param name="destination" value="$idlezone" />
            <param name="debugchance" value="$debugchance" />
          </run_script>
        </do_if>
      </do_if>

      <set_value name="$idletime" min="30s" max="90s"/>
      <run_script name="'move.idle'">
        <param name="TimeOut" value="$idletime" />
      </run_script>
      <resume label="start" />

      <label name="finish" />
      <do_if value="$selloffer.exists">
        <debug_text text="player.age + ' SELLOFFER INFO:\n\'%1\' sells %2 units of %3 for a total price of %4 Cr.'.[$selloffer.seller.knownname, $selloffer.offeramount.{this}, $selloffer.ware.name, $selloffer.price]" chance="$debugchance" />
      </do_if>

      <!-- TODO: if we find that traders buy too much of a ware, only fill a fraction of the cargo space with any one ware, so that we'll still have space for others left (only if the basket contains more than one ware) -->
      <!--<set_value name="$totalcargospace" exact="this.ship.cargo.{$ware}.max" />
      <set_value name="$freecargospace" exact="this.ship.cargo.{$ware}.free" />
      <set_value name="$amount" />
      <debug_text text="'Amount that will be traded: ' + $amount" chance="$debugchance" />
      <retval name="amount" value="$amount" />-->

      <return>
        <retval name="buyoffer" value="$buyoffer" />
        <retval name="selloffer" value="$selloffer" />
      </return>

    </actions>
  </attention>
</aiscript>
