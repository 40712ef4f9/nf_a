<?xml version="1.0" encoding="iso-8859-1" ?>
<aiscript name="BR.fight.attack.object.capital" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="1">
  <!--

  Capital ship (defense officer NPC) vs Object (any class)
  by Adrian
  
  Attack of a capital ship (made by defense noc), to enemys in weapon range
  Set turrets and launch drones 
  Not movement: see 'move.attack.object.capital'
  
  Optional target (object) as a parameter.
  Optional endwheninactive, to finish when there are no enemies.

  -->
  <params>
    <param name="target" default="null"/>
    <param name="allowothertargets" default="true" comment="Whether the script shall keep running when primary target have been destroyed (ignore if not target provided)" />
    <param name="checkrelation" default="true" />
    <param name="debugoutputchance" default="0"/>
  </params>
  <interrupts>
    <handler>
      <conditions>
        <check_any>
          <check_all>      
            <event_object_attacked object="this.ship"/>
            <check_value value="event.param.isoperational"/>
            <check_value value="event.param and (event.param.isclass.defensible or event.param.defensible.exists)"/>
            <check_value value="this.ship.mayattack.{event.param}" />
            <check_value value="not $attackers.indexof.{event.param} and not $enemies.indexof.{event.param}" />
          </check_all>
          <check_all>
            <event_gravidar_has_scanned object="this.ship" />
            <check_value value="this.ship.attention ge attention.visible" />
            <check_value value="not $attackint? or ($attackint? and $attackint lt player.age)" />
            <count_gravidar_contacts result="$close_targets" object="this.ship" class="[class.ship_l, class.ship_xl, class.ship_s, class.ship_m, class.station]" mayattack="this.ship" min="1">
              <match_distance object="this.ship" max="6km"/>
            </count_gravidar_contacts>
          </check_all>
        </check_any>
      </conditions>
      <actions>
        <!--Get the top-level defensible of the attacker in low attention case-->
        <do_if value="event.name" exact="'event_object_attacked'">
		  <debug_text text="'event_object_attacked: ' + this.ship.knownname" chance="$debugoutputchance"/>
          <set_value name="$counterstrike" exact="100"/>
		  <!--uncover if no real enemy-->
          <set_value name="$notEnemy" exact="if event.param and event.param.owner.hasrelation.enemy.{this.ship.trueowner} then false else true"/>
          <do_if value="this.ship.owner != this.ship.trueowner and ($notEnemy or this.ship.shieldpercentage lt 20)">
            <set_value name="$counterstrike" exact="0" chance="if event.param and event.param.owner.hasrelation.enemy.{this.ship.trueowner} then 0 else 100"/>
            <get_control_entities groupname="$Entities" object="this.ship"/>
            <do_all exact="$Entities.count" counter="$j" > 
              <set_cover_owner object="$Entities.{$j}"/>
            </do_all> 
            <set_cover_owner object="this.ship"/>
            <remove_value name="$Entities"/>
          </do_if>
          <remove_value name="$notEnemy"/>
		  <!--keep calm-->
		  <do_if value="$target and $target != event.param and event.param.relationto.{this.ship.owner} lt event.param.owner.relationto.{this.ship.owner} and not event.param.trueowner.hasrelation.enemy.{this.ship.trueowner}" 
		  	chance="if this.ship.attention ge attention.visible and event.param and event.param.isclass.[class.ship_l, class.ship_xl, class.station] then 100 else 0">
          	<set_value name="$negrelation" exact="if event.param.relationto.{this.ship} lt this.owner.relation.neutral.min then event.param.relationto.{this.ship} else null" />
			<do_if value="$negrelation">
			  <add_relation_boost object="event.param" otherobject="this" value="this.owner.relation.neutral.mid - $negrelation" decay="1" delay="30min" silent="true" />
			  <set_value name="$counterstrike" exact="0" />
			</do_if>
          	<remove_value name="$negrelation"/>
          </do_if>
		  <!--this is sparta-->
          <set_value name="$attacker" exact="null"/>
          <do_if value="event.param and typeof event.param == datatype.component" chance="$counterstrike">
            <set_value name="$attacker" exact="if event.param.isclass.defensible then event.param else event.param.defensible"/>
            <add_to_group groupname="$attackers" object="$attacker"/>
          </do_if>
          <debug_text text="' %1 attention. add attacker %2 (%3) to $attackers (%4) | enemies %5.'.[this.ship.attention, $attacker.knownname, $attacker, $attackers.count, $enemies.count]" chance="$debugoutputchance" />
          <remove_value name="$counterstrike"/>
        </do_if>
        <!-- Only break the current blocking high attention -->
        <do_if value="this.ship.attention ge attention.visible">
          <set_value name="$attackint" exact="player.age + 10s"/>
          <abort_called_scripts resume="FindEnemies" />
        </do_if>
      </actions>
    </handler>
    <handler>
      <conditions>
        <event_object_jump_completed  object="this.ship" />
        <check_value value="this.attention ge attention.visible" />
        <check_value value="this.combinedskill ge 70" />
      </conditions>
      <actions>
        <abort_called_scripts resume="FindEnemies" />
      </actions>
    </handler>
    <handler>
      <conditions>
        <event_object_changed_owner object="$target" check="false" />
        <check_value value="event.object.exists and not event.param.hasrelation.enemy.{this.ship.owner}"/>
      </conditions>
      <actions>
        <!-- Remove the target to stop shooting at it, when owner changes -->
        <set_value name="$target" exact="null" />
        <abort_called_scripts resume="FindEnemies"/>
      </actions>
    </handler>
    <handler>
      <conditions>
        <event_object_incoming_missile  object="this.ship" />
        <check_value value="this.attention ge attention.visible" />
        <check_value value="this.combinedskill ge 90" />
      </conditions>
      <actions>
        <do_if value="this.$missiles?" negate="true">
          <create_group groupname="this.$missiles" />
        </do_if>
        <add_to_group groupname="this.$missiles" object="event.param2" />
        <do_if value="not $intercept? or ($intercept? and $intercept lt player.age)" chance="if this.ship.subordinates.count then 100 else 0">
          <signal_objects object="this.ship" param="'intercept missile'"/>
          <set_value name="$intercept" exact="player.age+2s" />
        </do_if>
      </actions>
    </handler>
    <handler>
      <conditions>
        <event_object_signalled object="this.ship" param="'update targets'" />
        <check_value value="@this.$dronetargetsShare" />
      </conditions>
      <actions>
        <do_if value="$dronetargets.list.count and event.param2.exists">
          <signal_objects object="event.param2" param="'update targets'" param2="$dronetargets.list" />
        </do_if>
        <do_else>
          <remove_value name="this.$dronetargetsShare" />
        </do_else>
      </actions>
    </handler>
    <handler>
      <conditions>
        <event_object_signalled object="this.ship" param="'intercept missile'" />
      </conditions>
      <actions>
        <create_group groupname="$interceptors" />
        <do_all exact="this.ship.subordinates.count" counter="$f" >
          <do_if value="this.ship.subordinates.{$f}.macro.ismacro.[macro.units_size_drone_attackdrone_impulse_mk1_macro, macro.units_size_drone_attackdrone_impulse_mk2_macro, macro.units_size_drone_attackdrone_plasma_mk1_macro, macro.units_size_drone_attackdrone_plasma_mk2_macro]">
            <add_to_group groupname="$interceptors" object="this.ship.subordinates.{$f}" />
          </do_if>
        </do_all>
        <set_value name="$tmp_missile" exact="this.ship.defencenpc.$missiles.list.clone"/>
        <do_all exact="$tmp_missile.count" counter="$f" reverse="true">
          <do_if value="$tmp_missile.{$f}.exists" negate="true">
            <do_if value="$tmp_missile.{$f}">
              <remove_from_group group="this.ship.defencenpc.$missiles" object="$tmp_missile.{$f}" />
            </do_if>
            <remove_value name="$tmp_missile.{$f}" />
          </do_if>
        </do_all>
        <do_if value="$tmp_missile.count">
          <signal_objects group="$interceptors" param="'intercept missile'" />
        </do_if>
        <remove_value name="$tmp_missile" />
        <remove_value name="$interceptors" />
      </actions>
    </handler>
  </interrupts>
  <init>
    <!-- Command on defense officer-->
    <set_command command="command.attackenemies" />
    <!-- initial variables -->
    <set_value name="$lastdronelaunch" exact="player.age - 500s" />
    <set_value name="$nextammocheck" exact="player.age + 100s" />
    <set_value name="$nextenemycheck" exact="player.age"/>
    <set_value name="$FiringRange" exact="this.ship.maxcombatrange.all"/>
    <create_group groupname="$attackers"/>
    <create_list name="$enemies" />
  </init>
  <attention min="visible">
    <actions>

      <debug_text text="'Firing range for: ' + this.ship.knownname + ' is: ' + $FiringRange" chance="$debugoutputchance"/>

      <label name="FindEnemies" />
      <set_value name="$thiscombinedskill" exact="this.combinedskill"/> 

      <do_if value="$target.exists and not @$target.isclass.defensible and @$target.container.isclass.defensible"> 
        <set_value name="$target" exact="$target.container" /> 
      </do_if> 
      <!-- Only update enemies with some delay -->
      <do_if value="player.age ge $nextenemycheck">
        <!--TODO: Based on skill?-->
        <set_value name="$skillpower" exact="$thiscombinedskill"/> 
        <set_value name="$skillpower" exact="this.ship.pilot.combinedskill" operation="add" chance="this.ship.pilot.exists*100"/> 
        <set_value name="$skillpower" exact="this.ship.engineer.combinedskill" operation="add" chance="this.ship.engineer.exists*100"/> 
        <set_value name="$skillpower" exact="if $skillpower gt 3 then $skillpower / 3 else $skillpower"/> 
        <set_value name="$temp" exact="100 - $thiscombinedskill" comment="100 - (0-100)"/>
        <set_value name="$nextenemycheck" min="player.age + 10s" max="player.age + 20s + ($temp*1s)"/>
        <remove_value name="$temp" />

        <!-- Create/clean list of enemies -->
        <create_list name="$enemies" />

        <!-- Find (more) enemies if no target or other targets are allowed -->
        <do_if value="not $target or @$allowothertargets or @$close_targets">
          <find_gravidar_contact name="$enemies" object="this.ship" functional="true" maybeattackedby="this.ship" multiple="true">
            <match_distance object="this.ship" max="$FiringRange"/>
          </find_gravidar_contact>
        </do_if>

        <!-- Main target (parameter) -->
        <do_if value="$target.isoperational">
          <do_if value="(this.ship.mayattack.{$target} or not $checkrelation) and not @$target.dockslot" comment="check relation of ship (not defense NPC)" >
            <debug_text text="'Prefered target of: ' + this.ship.knownname + ' is: ' + $target.knownname" chance="$debugoutputchance"/>
            <!--check if target is already in list of enemies-->
            <do_if value="not $enemies.indexof.{$target}">
              <append_to_list name="$enemies" exact="$target" />
            </do_if>
          </do_if>
          <do_else>
            <!-- Target is not an enemy anymore -->
            <set_value name="$target" exact="null" />
          </do_else>
        </do_if>

        <create_group groupname="$targets" />
        <create_group groupname="$dronetargets" />
      </do_if>

      <!-- include attackers -->
      <do_all exact="$attackers.count" counter="$i">
        <do_if value="not $enemies.indexof.{$attackers.{$i}} and this.ship.mayattack.{$attackers.{$i}}">
          <append_to_list name="$enemies" exact="$attackers.{$i}" />
        </do_if>
      </do_all>
      <clear_group group="$attackers"/>

      <!-- ************************ Modified code from vanilla, start ************************ -->
      <!--
        Bonus calculation based on skill works like this:
        Base bonus: 10 
        Max: 10+5+5 = 20 (combat*2+leadership+morale)
        Max total: 30
        Min total: 10
        NB: Do not increase basevalue without changing the dronelaunch delay hack in the end of script.
        Calculating baseskill:-->
      <set_value name="$DObaseskill" exact="10 + @this.defensible.defencenpc.skill.combat * 2 + @this.defensible.defencenpc.skill.leadership + @this.defensible.defencenpc.skill.morale" />
      <set_value name="$LRShip" exact="global.$MICT_LR_Ships? and this.ship.macro.ismacro.{global.$MICT_LR_Ships}" />
      <!--<set_value name="$DObaseskill" exact="30"/>-->

      <!--<debug_text text="player.age + '%1 DO skill calculation: combat: %2*2, leadership: %3, morale: %4, baseskill calculated to: %5'.[this.ship.name, this.defensible.defencenpc.skill.combat, this.defensible.defencenpc.skill.leadership, this.defensible.defencenpc.skill.morale, $DObaseskill]" chance="100" filter="general" />-->
      <!--Calculate droneswarm size, max 10 for L/LX and light/heavy suls-->
      <do_if value="this.ship.isclass.ship_xl or this.ship.macro.ismacro.[macro.units_size_l_kit_carrier_01_macro, macro.units_size_l_kit_carrier_02_macro]">
        <set_value name="$droneswarmsize"  exact="$DObaseskill / 3" />
      </do_if>
      <do_else>
        <!-- halve the drone swarm size for all L ships exept suls handled above-->
        <set_value name="$droneswarmsize"  exact="($DObaseskill / 3) / 2" />
      </do_else>

      <!-- ok, we have found enemies, let's do something about them -->
      <do_if value="$enemies.count" min="1">
        <!--Adding/resetting extra needed variables for target priority and rangechecks-->
        <set_value name="$prioTarget" exact="null"/>
        <set_value name="$closestTarget" exact="null"/>
        <create_group groupname="$targetsInSight"/>
        <create_group groupname="$validbigguntarget"/>


        <!-- Simulate the attack -->
        <set_command_action commandaction="commandaction.attacking" />

        <activate_battlestate object="this.ship" state="battlestate_red" />
        <!--<activate_flaks object="this.ship" />-->
        <set_value name="this.$combat_active" exact="player.age" />

        <!--If wingman, check and adapt leader DO's combat state-->
        <do_if value="@this.ship.commander.exists and @this.ship.commandertype == entitytype.commander and this.ship.isplayerowned == true">
          <set_value name="this.$config_attackenemies" exact="@this.ship.commander.defencenpc.$config_attackenemies" />
          <do_if value="@this.$config_attackenemies == 1">
            <set_value name="$allowothertargets" exact="true"/>
          </do_if>
          <do_else>
            <set_value name="$allowothertargets" exact="false"/>
          </do_else>
        </do_if>

        <do_all counter="$i" exact="$enemies.count">
          <do_if value="@$enemies.{$i}.boarder and @this.ship.relationto.{$enemies.{$i}.boarder} ge 0 and $enemies.{$i}.hullpercentage le 70">
            <continue />
          </do_if>

          <do_if value="$enemies.{$i}.isoperational">
            <!--Checks for target ignore/stop shooting. Added here to ensure also bad DO's responds-->
            <do_if value="@$enemies.{$i}.boarder and @this.ship.relationto.{$enemies.{$i}.boarder} ge 0 and $enemies.{$i}.hullpercentage le 70" chance="0" comment="seems to be useless now">
              <debug_text text="player.age + '%1. target is being boarded by frendlies and hull is below 70 percent. Stopping fire. Ship which is boarded: %2, boardee name: %3, relation to boarder: %4'.[this.ship.name, $enemies.{$i}.name, $enemies.{$i}.boarder.name, this.ship.relationto.{$enemies.{$i}.boarder}]" chance="$debugoutputchance" filter="general" />
              <set_value name="$shootattarget" exact="false"/>
              <cease_fire object="this.ship" weapontype="combat"/>
            </do_if>
            <do_else>
              <set_value name="$shootattarget" exact="true"/>
            </do_else>
            <!--Get random bonus to skill calculations-->
            <set_value name="$DOskillcheckbonus" min="0" max="10" />
            <!-- fail detecting enemy if skill level too low-->
            <do_if value="($DObaseskill + $DOskillcheckbonus) gt 19 and $shootattarget" comment="PRO and 1337 Version">
              <!--Add to drone targetlist if valid target, masstraffic included. Avoids stations and L/XL here -->
              <do_if value="$enemies.{$i}.isclass.[class.ship_xs, class.ship_s, class.ship_m]">
                <!--Don't let drones wander too far off-->
                <do_if value="this.ship.distanceto.{$enemies.{$i}}" max="10000m">
                  <add_to_group groupname="$dronetargets" object="$enemies.{$i}" />
                </do_if>
                <!-- Generating targets list, LOS check pr. enemy, potential expensive stuff.. -->
                <add_to_group groupname="$targets" object="$enemies.{$i}"/>
                <!--TODO: LOS might be a bit overkill here. consider removing-->
                <set_value name="$result" exact="true"/>
                <check_line_of_sight name="$result" object="this.ship" target="$enemies.{$i}" chance="if $thiscombinedskill ge 75 then 100 else 0"/>
                <!--find closest target with LOS. set as prioritized in case $i is closest or first one-->
                <do_if value="$closestTarget != null and $result">
                  <do_if value="this.ship.distanceto.{$enemies.{$i}} lt this.ship.distanceto.{$closestTarget}">
                    <set_value name="$closestTarget" exact="$enemies.{$i}"/>
                    <set_value name="$prioTarget" exact="$closestTarget"/>
                    <add_to_group groupname="$targets" object="$enemies.{$i}" />
                  </do_if>
                </do_if>
                <do_elseif value="$closestTarget == null and $result">
                  <!--for first target-->
                  <set_value name="$closestTarget" exact="$enemies.{$i}"/>
                  <set_value name="$prioTarget" exact="$closestTarget"/>
                  <add_to_group groupname="$targets" object="$enemies.{$i}" />
                </do_elseif>
                <!--adding skunk as valid target for IHC/torpedoes for NPC's if they have LOS-->
                <do_if value="$enemies.{$i} == @player.primaryship and $result">
                  <do_if value="$result">
                    <add_to_group groupname="$validbigguntarget" object="$enemies.{$i}"/>
                    <!--<debug_text text="player.age + '%1 DO added skunk as target for bigguns'.[this.ship.name]" chance="100" filter="general" />-->
                  </do_if>
                </do_if>
                <remove_value name="$result" />
              </do_if>
              <do_elseif value="$enemies.{$i}.isclass.[class.ship_xl, class.ship_l]">
                <check_line_of_sight name="$result" object="this.ship" target="$enemies.{$i}"/>
                <do_if value="$result">
                  <set_value name="$droneRange" exact="if this.ship.distanceto.{$enemies.{$i}} le 10km then true else false" />
                  <set_value name="$droneShould" exact="if $enemies.{$i}.primarypurpose == objectpurpose.fight then false else true" />
                  <find_object_component object="$enemies.{$i}" groupname="$targetComps" surfaceelement="true" multiple="true" integrated="false"/>
                  <do_all exact="$targetComps.list.count" counter="$j">
                    <!-- fail detecting component if skill level too low. 30 is 5 star basevalue with 0 random bonus. Getting new random number-->
                    <set_value name="$DOskillcheckbonus" min="0" max="10" />
                    <do_if value="($DObaseskill + $DOskillcheckbonus) gt 29">
                      <!--TODO: Probably not complete item list. Prioritized surface elements (ignoring shieldgens, waste of time)-->
                      <do_if value="$targetComps.list.{$j}.isclass.[class.turret, class.jumpdrive, class.engine, class.launcher]">
                        <!-- LOS only for the whole enemy, turrets won't shoot at something they don't see -->
                        <set_value name="$result" exact="false"/>
                        <check_line_of_sight name="$result" object="this.ship" target="$targetComps.list.{$j}" chance="if $thiscombinedskill ge 75 then 100 else 0"/>
                        <add_to_group groupname="$targetsInSight" object="$targetComps.list.{$j}" chance="if $result then 100 else 0"/>
                        <add_to_group groupname="$dronetargets" object="$targetComps.list.{$j}" chance="if $result or not $droneShould or not $droneRange or $targetComps.list.{$j}.isclass.turret then 0 else 100"/>
                        <add_to_group groupname="$targets" object="$targetComps.list.{$j}"/>
                        <!--Adding LOS targets as valid for big guns for offensive DO + NPC-->
                        <do_if value="@this.$config_attackenemies == 1 or not this.ship.isplayerowned or ($target == $enemies.{$i} and not $enemies.{$i}.boarder)">
                          <add_to_group groupname="$validbigguntarget" object="$targetComps.list.{$j}"/>
                        </do_if>
                      </do_if>
                      <!--Adding LOS targets of opportunity for an offensive DO and NPC's. Also valid for big guns-->
                      <do_elseif value="$targetComps.list.{$j}.isclass.[class.dronelaunchpad, class.radar]">
                        <do_if value="@this.$config_attackenemies == 1 or not this.ship.isplayerowned or ($target == $enemies.{$i} and not $enemies.{$i}.boarder)">
                          <set_value name="$result" exact="false"/>
                          <check_line_of_sight name="$result" object="this.ship" target="$targetComps.list.{$j}" chance="if $skillpower ge 75 then 100 else 0"/>
                          <add_to_group groupname="$targetsInSight" object="$targetComps.list.{$j}" chance="if $result then 100 else 0"/>
                          <add_to_group groupname="$targets" object="$targetComps.list.{$j}" />
                          <add_to_group groupname="$validbigguntarget" object="$targetComps.list.{$j}"/>
                          <add_to_group groupname="$dronetargets" object="$targetComps.list.{$j}" chance="if $result or not $droneShould or not $droneRange then 0 else 100"/>
                       </do_if>
                      </do_elseif>
                    </do_if>
                  </do_all>
                  <remove_value name="$droneShould" />
                  <remove_value name="$droneRange" />
                </do_if>
                <remove_value name="$targetComps" />
                <remove_value name="$result" />
                <!--Only do intentional targetting of hull if defence officer is in offensive mode or this is a NPC ship. Also send out drones + shoot IHC/torpedoes for sucellus/balor -->
                <do_if value="@this.$config_attackenemies == 1 or not this.ship.isplayerowned or ($target == $enemies.{$i} and not $enemies.{$i}.boarder)">
                  <add_to_group groupname="$targets" object="$enemies.{$i}" />
                  <add_to_group groupname="$validbigguntarget" object="$enemies.{$i}"/>
                  <do_if value="this.ship.distanceto.{$enemies.{$i}} lt 10000m" chance="100-[$skillpower-this.ship.shieldpercentage,0].max">
                    <add_to_group groupname="$dronetargets" object="$enemies.{$i}" />
                  </do_if>
                  <!--<debug_text text="player.age + '%1 capship targetting, DO in offensive, adding %2 hull to target list'.[this.ship.name, $target]" chance="100" filter="general" />-->
                </do_if>

              </do_elseif>
              <do_elseif value="$enemies.{$i}.isclass.station">
                <!-- find and prioritize LOS station weapons -->
                <!--TODO: LOS is kind of overkill here... consider removing-->
                <!--<find_object_component object="$enemies.{$i}" groupname="$targetComps" surfaceelement="true" functional="true" checkoperational="true" multiple="true" integrated="false"/>-->
                <find_object_component object="$enemies.{$i}" groupname="$targetComps" class="[class.turret, class.weapon, class.launcher]" surfaceelement="true" checkoperational="true" multiple="true" integrated="false"/>
                <!--<debug_text text="player.age + '%1 station targetting prepare. %2 entries total'.[this.ship.name, $targetComps.list.count]" chance="100" filter="general" />-->
                <do_if value="$targetComps.list.count and $thiscombinedskill lt 80">
                  <add_to_group groupname="$targets" list="$targetComps.list"/>
                </do_if>
                <do_else>
                  <do_all exact="$targetComps.list.count" counter="$j">
                    <add_to_group groupname="$targets" object="$targetComps.list.{$j}"/>
                    <add_to_group groupname="$validbigguntarget" object="$targetComps.list.{$j}" chance="0"/>
                    <set_value name="$result" exact="false"/>
                    <check_line_of_sight name="$result" object="this.ship" target="$targetComps.list.{$j}" chance="if $thiscombinedskill ge 80 then 100 else 0"/>
                    <add_to_group groupname="$targetsInSight" object="$targetComps.list.{$j}" chance="if $result then 100 else 0"/>
                  </do_all>
                </do_else>
                <!--add station hull parts as valid targets of opportunity for offensive DO/NPC. Big targets, dont have skillchecks here -->

                <!-- NPC TroopShips station disable mode (remember: just for attention visible)-->
                <!--this ship is NPC and the target is a station that is being boarded by friends or ... -->
                <!--this ship is NPC and this zone have friendly troopships or ... --> 
                <!--this ship is NPC and the station hull is ge 95% and yet have guns or ... -->
                <!--this ship is a troopship itself -->
                <!--then dont target the station hull, just the guns-->
                <find_ship name="$TroopShip" functional="true" space="$enemies.{$i}.zone" multiple="true" chance="if $TroopShip? then 0 else 100">
                  <match_any>
                    <match macro="macro.units_size_l_troop_transporter1_macro"/>
                    <match macro="macro.units_size_l_troop_transporter5_macro"/>
                    <match_relation faction="this.ship.owner" relation="neutral" comparison="ge" />
                  </match_any>
                </find_ship>

                <set_value name="$flag" exact="if not this.ship.isplayerowned and 
                                    (
                                      (@$enemies.{$i}.boarder and @this.ship.relationto.{$enemies.{$i}.boarder} ge 0) or 
                                      $TroopShip.count or 
                                      (@$enemies.{$i}.hullpercentage ge 95 and $targetComps.list.count)
                                    ) or 
                                    (this.ship.macro.ismacro.{global.$boardingvessel_cap}) 
                                  then 1 else 0" />

                <do_if value="@this.$config_attackenemies == 1 and not $flag">
                  <clear_group group="$targetComps"/>
                  <!--<find_object_component object="$enemies.{$i}" multiple="true" functional="true" groupname="$targetComps">-->
                  <find_object_component object="$enemies.{$i}" multiple="true" hullinvulnerable="false" indestructible="false" checkoperational="true" groupname="$targetComps">
                    <match_size min="10m"/>
                  </find_object_component>
                  <do_if value="$targetComps.list.count and $thiscombinedskill lt 80">
                    <add_to_group groupname="$targets" list="$targetComps.list"/>
                    <add_to_group groupname="$validbigguntarget" list="$targetComps.list"/>
                  </do_if>
                  <do_else>
                    <do_all exact="$targetComps.list.count" counter="$j">
                      <do_if value="@$targetComps.list.{$j}.hullpercentage gt -1 and not @$targetComps.list.{$j}.iswreck">
                        <!--subcomps found, add each to pri list IHC/torpedoes + general targets list-->
                        <add_to_group groupname="$targets" object="$targetComps.list.{$j}"/>
                        <add_to_group groupname="$validbigguntarget" object="$targetComps.list.{$j}"/>
                        <set_value name="$result" exact="false"/>
                        <check_line_of_sight name="$result" object="this.ship" target="$targetComps.list.{$j}" chance="if $thiscombinedskill ge 80 then 100 else 0"/>
                        <add_to_group groupname="$targetsInSight" object="$targetComps.list.{$j}" chance="if $result then 100 else 0"/>
                      </do_if>
                    </do_all>
                  </do_else>
                  <!--add the main object as well. Might be pontless if indestructible...-->
                  <add_to_group groupname="$targets" object="$enemies.{$i}" chance="0"/>
                  <add_to_group groupname="$validbigguntarget" object="$enemies.{$i}" chance="0"/>
                </do_if>
                <remove_value name="$targetComps" />
                <remove_value name="$result" />
              </do_elseif>
              <do_else>
                <!-- Add to general target list if .isclass other -->
                <add_to_group groupname="$targets" object="$enemies.{$i}" />
              </do_else>
              <!--<debug_text text="player.age + '%1 capship targetting found pri.target: %2, targetsinsight: %3, total %4 targets'.[this.ship.name, $prioTarget, $targetsInSight.count, $targets.count]" chance="100" filter="general" />-->
            </do_if>
            <do_else comment="not so 1337 Version">
              <do_if value="$enemies.{$i}.isclass.[class.ship_xs, class.ship_s, class.ship_m]">
                <add_to_group groupname="$targets" object="$enemies.{$i}" chance="[90-$i, 50].max" />
                <add_to_group groupname="$dronetargets" object="$enemies.{$i}" chance="70"/>
              </do_if>
              <do_elseif value="$enemies.{$i}.isclass.[class.ship_xl, class.ship_l]">
                <add_to_group groupname="$targets" object="$enemies.{$i}" chance="100" />
                <add_to_group groupname="$validbigguntarget" object="$enemies.{$i}" chance="88"/>
                <create_group groupname="$targetComps" />
                <find_object_component object="$enemies.{$i}" groupname="$targetComps" class="[class.engine, class.launcher]" surfaceelement="true" checkoperational="true" multiple="true" integrated="false" chance="if $thiscombinedskill lt 40 then 50 else 0"/>
                <find_object_component object="$enemies.{$i}" groupname="$targetComps" class="[class.engine, class.turret, class.jumpdrive, class.weapon, class.launcher]" surfaceelement="true" checkoperational="true" multiple="true" integrated="false" chance="if $enemies.{$i}.boarder and @this.ship.relationto.{$enemies.{$i}.boarder} ge 0 then 80 else if $thiscombinedskill ge 40 then 50 else 0"/>
                <add_to_group groupname="$dronetargets" list="$targetComps.list" chance="75"/>
                <do_if value="$targetComps.list.count and this.ship.distanceto.{$enemies.{$i}} le $FiringRange/2">
                  <add_to_group groupname="$targets" list="$targetComps.list"/>
                </do_if>
                <remove_value name="$targetComps" />
              </do_elseif>
              <do_elseif value="$enemies.{$i}.isclass.station">
                <do_if value="$LRShip">
                  <find_ship name="$TroopShip" functional="true" space="$enemies.{$i}.zone" multiple="true" chance="if $TroopShip? then 0 else 100">
                    <match_any>
                      <match macro="macro.units_size_l_troop_transporter1_macro"/>
                      <match macro="macro.units_size_l_troop_transporter5_macro"/>
                      <match_relation faction="this.ship.owner" relation="neutral" comparison="ge" />
                    </match_any>
                  </find_ship>

                  <find_object_component object="$enemies.{$i}" groupname="$targetComps" hullinvulnerable="false" indestructible="false" checkoperational="true" multiple="true" chance="if $TroopShip.count then 0 else 100" />
                  <find_object_component object="$enemies.{$i}" groupname="$targetComps" class="[class.turret, class.weapon, class.launcher]" surfaceelement="true" checkoperational="true" multiple="true" integrated="false" chance="if $TroopShip.count then 100 else 0"/>
                  <do_if value="$targetComps.list.count">
                    <add_to_group groupname="$targets" list="$targetComps.list"/>
                    <add_to_group groupname="$validbigguntarget"  list="$targetComps.list" chance="if $TroopShip.count then 0 else 100"/>
                  </do_if>
                  <remove_value name="$targetComps" />
                </do_if>
                <do_else>
                  <add_to_group groupname="$targets" object="$enemies.{$i}" chance="40" />
                </do_else>
              </do_elseif>
              <do_else>
                <add_to_group groupname="$targets" object="$enemies.{$i}" chance="50" />
              </do_else>
            </do_else>
          </do_if>
        </do_all>
        <remove_value name="$TroopShip" />

        <!-- Turret/weapon target and fire logic-->
        <do_if value="$targets.count">

          <set_value name="$flagT" exact="if @$target and @$target.isclass.defensible and @$target.boarder and @this.ship.relationto.{$target.boarder} ge 0 and $target.hullpercentage le 70 then 0 else 1"/>
          <set_value name="$flagV" exact="if $validbigguntarget.count and @$validbigguntarget.{1}.boarder and @this.ship.relationto.{$validbigguntarget.{1}.boarder} ge 0 and $validbigguntarget.{1}.hullpercentage le 70 then 0 else 1"/>
          <set_value name="$flagTs" exact="if @$targets.{1}.boarder and @this.ship.relationto.{$targets.{1}.boarder} ge 0 and $targets.{1}.hullpercentage le 70 then 0 else 1"/>
          <!-- now check for components-->
          <set_value name="$flagTc" exact="if @$target.container.exists and @$target.container.isclass.defensible and @$target.container.boarder and @this.ship.relationto.{$target.container.boarder} ge 0 and $target.container.hullpercentage le 70 then 0 else 1"/>
          <set_value name="$flagVc" exact="if $validbigguntarget.count and @$validbigguntarget.{1}.container.exists and @$validbigguntarget.{1}.container.boarder and @this.ship.relationto.{$validbigguntarget.{1}.container.boarder} ge 0 and $validbigguntarget.{1}.container.hullpercentage le 70 then 0 else 1"/>
          <set_value name="$flagTsc" exact="if @$targets.{1}.container.exists and @$targets.{1}.container.boarder and @this.ship.relationto.{$targets.{1}.container.boarder} ge 0 and $targets.{1}.container.hullpercentage le 70 then 0 else 1"/>

          <set_value name="$MainTarget" exact="$target" />

          <do_if value="$target and $target.isclass.station">
            <find_object_component object="$target" groupname="$targetComps" multiple="true" hullinvulnerable="false" surfaceelement="false" checkoperational="true" indestructible="false"/>
            <!--<match_size min="100m"/>
                <match class="class.shieldgenerator" negate="true" />
              </find_object_component>-->
            <do_all exact="$targetComps.list.count" counter="$j">
              <do_if value="@$targetComps.list.{$j}.hullpercentage gt -1 and not @$targetComps.list.{$j}.iswreck">
                <set_value name="$TMP_dist" exact="this.ship.distanceto.{$targetComps.list.{$j}}" />
                <check_line_of_sight name="$result" object="this.ship" target="$targetComps.list.{$j}"/>
                <do_if value="$result and $TMP_dist le $FiringRange">
                  <set_value name="$MainTarget_TMP" exact="$targetComps.list.{$j}" />
                  <break />
                </do_if>
                <do_elseif value="$result and not $MainTarget_TMP_dist? or $TMP_dist le @$MainTarget_TMP_dist">
                  <set_value name="$MainTarget_TMP" exact="$targetComps.list.{$j}" />
                  <set_value name="$MainTarget_TMP_dist" exact="$TMP_dist" />
                </do_elseif>
                <do_elseif value="not $result and not $MainTarget_TMP_dist?">
                  <set_value name="$MainTarget_TMP" exact="$targetComps.list.{$j}" />
                  <set_value name="$MainTarget_TMP_dist" exact="$TMP_dist" />
                </do_elseif>
              </do_if>
            </do_all>
            <do_if value="$MainTarget_TMP?">
              <set_value name="$MainTarget" exact="$MainTarget_TMP" />
            </do_if>
			<remove_value name="$TMP_dist" />
			<remove_value name="$MainTarget_TMP_dist" />
            <remove_value name="$MainTarget_TMP" />
			<remove_value name="$targetComps" />
            <remove_value name="$result" />
          </do_if>
          <!-- primary_slot-->
          <do_if value="$validbigguntarget.count and $MainTarget">
            <do_if value="$target.isoperational and not $target.boarder">
              <shoot_at object="this.ship" target="$MainTarget" slot="tag.primary_slot" tolerance="10.0deg" weapontype="combat" />
              <do_if value="$LRShip">
                <set_value name="this.ship.pilot.$priotarget" exact="$MainTarget"/>
              </do_if>
            </do_if>
          </do_if>
          <do_elseif value="$validbigguntarget.count and $LRShip and this.ship.distanceto.{$targetsInSight.{1}}">
            <set_value name="this.ship.pilot.$priotarget" exact="$targetsInSight.{1}"/>
            <shoot_at object="this.ship" target="$targetsInSight.{1}" slot="tag.primary_slot" tolerance="10.0deg" weapontype="combat" />
          </do_elseif>
          <do_else>
            <stop_shooting object="this.ship" slot="tag.primary_slot"/>
            <do_if value="this.ship.pilot.$priotarget?">
              <remove_value name="this.ship.pilot.$priotarget" />
            </do_if>
          </do_else>
          <!-- secondary_slot-->
          <do_if  value="$MainTarget.isoperational and $flagT and $flagTc">
            <do_if value="$LRShip and this.ship.distanceto.{$MainTarget} le $FiringRange" chance="if $MainTarget.isclass.[class.ship_xs, class.ship_s, class.ship_m] then 0 else 100">
              <shoot_at object="this.ship" target="$MainTarget" slot="tag.secondary_slot" tolerance="360.0deg" locktarget="true" weapontype="combat" />
            </do_if>
            <do_elseif value="$LRShip" negate="true">
              <shoot_at object="this.ship" target="$MainTarget" slot="tag.secondary_slot" tolerance="360.0deg" locktarget="true" weapontype="combat" />
            </do_elseif>
            <do_else>
              <stop_shooting object="this.ship" slot="tag.secondary_slot" chance="50"/>
            </do_else>
          </do_if>
          <do_elseif value="$targetsInSight.count and $LRShip and this.ship.distanceto.{$targetsInSight.{1}} le $FiringRange" chance="if $target.isclass.station then 100 else 0">
            <set_value name="this.ship.pilot.$priotarget" exact="$targetsInSight.{1}"/>
            <shoot_at object="this.ship" target="$targetsInSight.{1}" slot="tag.secondary_slot" tolerance="360.0deg" weapontype="combat" />
          </do_elseif>
          <do_elseif value="$validbigguntarget.count and ($targetsInSight.indexof.{$validbigguntarget.{1}} or $thiscombinedskill le 70)">
            <shoot_at object="this.ship" target="$validbigguntarget.{1}" slot="tag.secondary_slot" tolerance="360.0deg" weapontype="combat" />
          </do_elseif>
          <do_else>
            <stop_shooting object="this.ship" slot="tag.secondary_slot"/>
          </do_else>
          <!-- turrets -->
          <do_if value="not ($prioTarget and $prioTarget.isoperational) and $target.isoperational and not $target.boarder and $targetsInSight.list.count lt 10">
            <set_turret_targets object="this.ship" preferredtarget="$MainTarget" target="if $targetsInSight.list.count then $targetsInSight.list else $targets.list" />
          </do_if>
          <do_elseif value="$prioTarget and $prioTarget.isoperational">
            <set_turret_targets object="this.ship" preferredtarget="$prioTarget" target="if $targetsInSight.list.count then $targetsInSight.list else $targets.list" />
          </do_elseif>
          <do_else>
            <set_turret_targets object="this.ship" target="if $targetsInSight.list.count then $targetsInSight.list else $targets.list" />
          </do_else>

          <!-- v0.19 test to make stations more destructible IZ -->
          <do_if value="@$target and $target.isclass.station and $target.hullpercentage gt 10">
			<set_value name="$damage" min="2" max="7" chance="if $target.shieldpercentage gt 10 then 0 else 100"/>
			<set_value name="$damage" min="0" max="3" chance="if $target.shieldpercentage gt 10 then 100 else 0"/>
            <set_object_hull object="$target" exact="$target.hullpercentage - $damage" chance="75"/>
			<remove_value name="$damage" />
          </do_if>

          <!-- v0.19 test to make stations more destructible IZ-->

        </do_if>
        <do_else>
          <stop_shooting object="this.ship" slot="tag.primary_slot"/>
          <stop_shooting object="this.ship" slot="tag.secondary_slot"/>
          <!--<cease_fire object="this.ship" weapontype="combat"/>
            <!{1}** Simulate the stand by **{1}>
            <set_command_action commandaction="commandaction.standingby" />-->
          <do_if value="this.ship.pilot.$priotarget?">
            <remove_value name="this.ship.pilot.$priotarget" />
          </do_if>
        </do_else>
        <!-- Launch drones -->
        <do_if value="$dronetargets.count">
          <do_if value="true" chance="if $thiscombinedskill ge 90 then 100 else 30">
            <set_value name="this.$dronetargetsShare" exact="$dronetargets.list.count"/>
          </do_if>
          <do_else>
            <remove_value name="this.$dronetargetsShare" />
          </do_else>
          <do_if value="player.age" min="$lastdronelaunch + 90s" chance="if this.ship.isboostactive then 0 else 100">
            <set_value name="$lastdronelaunch" exact="player.age"/>
            <find_object_component groupname="$dronepads" object="this.ship" class="class.dronelaunchpad" multiple="true" checkoperational="true" />
            <do_all exact="[($thiscombinedskill/10)i,$dronepads.count].min" counter="$i">
              <launch_drone name="$drone" object="$dronepads.{$i}" exact="5" group="unitcategory.defence"/>
              <do_if value="$drone">
                <start_script object="$drone.pilot" name="'fight.attack.object.drone.leader'">
                  <param name="target" value="$dronetargets.random" />
                  <param name="additionaltargets" value="$dronetargets" />
                  <param name="checkrelation" value="$checkrelation" />
                </start_script>
              </do_if>
              <remove_value name="$drone"/>
            </do_all>
            <remove_value name="$dronepads"/>
          </do_if>
        </do_if>
        <do_else>
          <remove_value name="this.$dronetargetsShare" />
        </do_else>
        <remove_value name="$drone" />
        <remove_value name="$flagTsc" />
        <remove_value name="$flagVc" />
        <remove_value name="$flagTc" />
        <remove_value name="$flagTs" />
        <remove_value name="$flagV" />
        <remove_value name="$flagT" />
        <remove_value name="$flag" />

        <signal_objects object="player.galaxy" param="'learned.something'" param2="[this, ware.inv_virtualseminarcombat, 'kill']" />
        <!-- ************************ Modified code from vanilla, end ************************ --> 

        <wait min="10s" max="20s" chance="0" />
        <clear_group group="$targetsInSight"/>
        <clear_group group="$validbigguntarget"/>
      </do_if>
      <do_else>
        <cease_fire object="this.ship" weapontype="combat"/>

        <!-- Simulate the stand by -->
        <set_command_action commandaction="commandaction.standingby" />

      </do_else>

      <!--*************NB: a bit changed from vanilla**************-->

      <!--added compatibility for patch 4.00-->
      <!-- wait until the next enemy check (this can be interrupted if new attacker attack) -->
      <wait exact="$nextenemycheck - player.age" />
      <!--added compatibility for patch 4.00-->

      <!-- Continue if the Config is Attack, or if there is still a PROVIDED target -->
      <do_if value="@this.$config_attackenemies or $target.isoperational">
        <clear_group group="$targets"/>
        <clear_group group="$dronetargets"/>
        <resume label="FindEnemies"/>
      </do_if> 

      <cease_fire object="this.ship" weapontype="combat"/>

      <remove_value name="this.$missiles" />
      <remove_value name="this.$dronetargetsShare" />

    </actions>
  </attention>
  <attention min="unknown">
    <actions>

      <debug_text text="'Firing range for: ' + this.ship.knownname + ' is: ' + $FiringRange" chance="$debugoutputchance"/>

      <label name="FindEnemies" />
      <set_value name="$thiscombinedskill" exact="this.combinedskill"/> 
      <do_if value="$target.exists and not @$target.isclass.defensible and @$target.container.isclass.defensible"> 
        <set_value name="$target" exact="$target.container" /> 
      </do_if> 

      <!-- ammo check -->
      <do_if value="player.age gt @$nextammocheck">
        <set_value name="$FiringRange" exact="this.ship.maxcombatrange.all * 1.2f + this.ship.size"/> 
        <set_value name="$skillpower" exact="this.combinedskill"/> 
        <set_value name="$skillpower" exact="this.ship.pilot.combinedskill" operation="add" chance="this.ship.pilot.exists*100"/> 
        <set_value name="$skillpower" exact="this.ship.engineer.combinedskill" operation="add" chance="this.ship.engineer.exists*100"/> 
        <set_value name="$skillpower" exact="if $skillpower gt 3 then $skillpower / 3 else $skillpower"/> 
        <set_value name="$ammodelay" min="8min" max="12min" />
        <set_value name="$nextammocheck" exact="player.age + $ammodelay" />

        <run_script name="'lib.ammo.missiles'" result="$needammo">
          <save_retval name="macros" variable="$order_macrolist" />
          <save_retval name="amounts" variable="$order_amountlist" />
        </run_script>

        <do_if value="$needammo">
          <do_all exact="$order_macrolist.count" counter="$i">
            <add_ammo object="this.ship" macro="$order_macrolist.{$i}" amount="$order_amountlist.{$i}" />
          </do_all>
        </do_if>

        <remove_value name="$order_macrolist" />
        <remove_value name="$order_amountlist" />
      </do_if>

      <!-- Create/clean list of enemies -->
      <create_list name="$enemies" />

      <!-- Find (more) enemies if no target or other targets are allowed -->
      <do_if value="not $target or @$allowothertargets">
        <find_gravidar_contact name="$enemies" object="this.ship" functional="true" maybeattackedby="this.ship" multiple="true">
          <match_distance object="this.ship" max="$FiringRange"/>
        </find_gravidar_contact>
      </do_if>

      <do_all exact="$attackers.count" counter="$i">
        <do_if value="not $enemies.indexof.{$attackers.{$i}} and this.ship.mayattack.{$attackers.{$i}}">
          <append_to_list name="$enemies" exact="$attackers.{$i}" />
        </do_if>
      </do_all>
      <clear_group group="$attackers"/>

      <do_if value="$target.isclass.station or @$allowothertargets"> 
        <find_gravidar_contact name="$Capital" object="this.ship" class="[class.ship_l, class.ship_xl]" functional="true" maybeattackedby="this.ship" multiple="false">
          <match_distance object="this.ship" max="$FiringRange"/>
          <match primarypurpose="objectpurpose.fight"/>
        </find_gravidar_contact>
        <find_gravidar_contact name="$Stations" object="this.ship"  class="class.station" functional="true" maybeattackedby="this.ship" multiple="true">
          <match_distance object="this.ship" max="$FiringRange"/>
          <match owner="faction.enemy" negate="true"/>    
          <match owner="faction.criminal" negate="true"/>    
          <match owner="faction.smuggler" negate="true"/>    
        </find_gravidar_contact>
        <do_all exact="$Stations.count" counter="$i"> 
          <do_if value="not $Capital and (not $attackint? or ($attackint? and $attackint lt player.age))"> 
            <find_object_component object="$Stations.{$i}" multiple="true" class="class.destructible" checkoperational="true" surfaceelement="false" integrated="false" groupname="$targetComps"> 
              <match_size min="10m"/> 
            </find_object_component> 
            <do_all exact="$targetComps.list.count" counter="$j"> 
              <do_if value="$targetComps.list.{$j}.isoperational and $targetComps.list.{$j}.hullpercentage"> 
                <do_if value="not $enemies.indexof.{$targetComps.list.{$j}}"> 
                  <append_to_list name="$enemies" exact="$targetComps.list.{$j}" /> 
                </do_if> 
              </do_if> 
            </do_all> 
          </do_if>
          <do_if value="not $enemies.indexof.{$Stations.{$i}}"> 
            <append_to_list name="$enemies" exact="$Stations.{$i}" /> 
          </do_if> 
        </do_all>
      </do_if> 
      <remove_value name="$Capital" />
      <remove_value name="$Stations" />
      <remove_value name="$targetComps" />
      <do_if value="$target.isoperational">
        <!--check if target is already in list of enemies-->
        <do_if value="not $enemies.indexof.{$target}">
          <do_if value="this.ship.mayattack.{$target} or not $checkrelation" comment="check relation of ship (not defense NPC)" >
            <debug_text text="'Prefered target of: ' + this.ship.knownname + ' is: ' + $target.knownname" chance="$debugoutputchance"/>
            <append_to_list name="$enemies" exact="$target" />
          </do_if>
        </do_if>
      </do_if>

      <!-- ok, we have found enemies, let's do something about them -->
      <set_value name="$attacktime" min="player.age + 30s" max="player.age + 40s" />
      <!-- Fight -->
      <do_if value="$enemies.count" min="1">
        <!-- Simulate the attack -->
        <set_command_action commandaction="commandaction.attacking" />

        <activate_battlestate object="this.ship" state="battlestate_red" />
      </do_if>
      <do_else>
        <!-- Simulate the stand by -->
        <set_command_action commandaction="commandaction.standingby" />
      </do_else>

      <set_value name="$waittime" exact="1s" />
      <!-- For each enemy, apply strength-->
      <do_while value="$enemies.count" min="1">
        <debug_text text=" ' unknown. ' + this.ship + ' fight. enemies: ' + $enemies " chance="$debugoutputchance" />

        <do_all exact="$enemies.count" counter="$i" reverse="true">
          <do_if value="not $attacks? or $i == 1"> 
            <set_value name="$attacks" exact="false" />
          </do_if> 
          <do_if value="not @$MaxEnemies">
            <!-- Search/Attacking waiting time -->
            <set_value name="$waittime" min="1s" max="4s" profile="increasing" />
            <wait exact="$waittime"/>

            <!--The maximum amount of enemies to be hit in this volley, based on the number of operational turrets-->
            <set_value name="$MaxEnemies" exact="[this.ship.summary.numturrets.operational / 5, 3, $enemies.count].min"/>
            <set_value name="$MaxEnemies" min="1" max="$MaxEnemies" profile="increasing"/>
          </do_if>

          <do_if value="@$enemies.{$i}.isoperational">
            <set_value name="$target" exact="$enemies.{$i}" />
            <!-- exclude the player ship in OOS case, this scenario wouldn't make any sense anyway -->
            <do_if value="$target != player.primaryship and ($target.isclass.defensible or ($target.container? and $target.container.isclass.defensible))">
              <!-- Get and apply strengths-->
              <do_if value="$target.isoperational or ($target.container? and $target.container.isoperational)" chance="[this.combinedskill, 90].max" comment="chance of succeed">
                <!-- do not attack objects that are too far away, gravidar range can be 50km+ !! -->
                <do_if value="this.ship.distanceto.{$target} lt ($FiringRange + $target.size/2.0)">
                  <do_if value="@$target.container.exists and $target.container.isclass.station"> 
                    <do_if value="$target.hullpercentage"> 
                      <set_value name="$damage" min="2" max="7" chance="if $target.shieldpercentage gt 10 then 0 else 100"/>
                      <set_value name="$damage" min="0" max="3" chance="if $target.shieldpercentage gt 10 then 100 else 0"/>
                      <set_object_hull object="$target" exact="$target.hullpercentage - $damage" chance="if not @$attacks then 90 else 60"/>
                      <remove_value name="$damage" />
                      <do_if value="$target.hullpercentage le 0"> 
                        <find_object_component object="$target" groupname="$targetComps" surfaceelement="true" multiple="true" integrated="false"/>
                        <do_all exact="$targetComps.list.count" counter="$tc"> 
                          <destroy_object object="$targetComps.list.{$tc}" explosion="true"/>
                        </do_all>
                        <remove_value name="$targetComps" /> 
                        <destroy_object object="$target" explosion="true"/> 
                      </do_if> 
                    </do_if> 

                    <set_value name="$target" exact="$target.container"/> 
                  </do_if> 
                  <do_elseif value="@$target.exists and $target.isclass.ship">
                    <set_value name="$attacks" exact="true" />
                  </do_elseif> 
                  <!-- Get the strength in 'result'-->
				  <set_value name="$usedrones" exact="false"/>
                  <do_if value="$target.isclass.[class.ship_xs, class.ship_s, class.ship_m]"> 
                    <set_value name="$usedrones" exact="true"/> 
                  </do_if> 
                  <do_elseif value="$target.isclass.[class.ship_l, class.ship_xl, class.station]" chance="@$skillpower">
                    <set_value name="$usedrones" exact="true"/>
                  </do_elseif> 
                  <get_attackstrength object="this.ship" target="$target" usedrones="$usedrones" result="$result" />
                  <!-- Apply the strength to target -->
                  <apply_attackstrength object="$target" attacker="this.ship" strength="$result * ($waittime)f" result="$isdead" />
                  <debug_text text="'%1 OOS. Apply strength of %2 against %3 is: %4(%5|%6). Is killed: %7'.[player.age,this.ship.knownname,$target.knownname,$result * ($waittime)f,$target.hull,$target.shield,$isdead]" chance="$debugoutputchance" />
                  <!--Wait so that attack/killed events are processed-->
                  <wait exact="1ms"/>
                </do_if>
                <do_else>
                  <debug_text text="'%1 OOS. Apply out of range of %2 against %3. Distance %4, fire range %5'.[player.age,this.ship.knownname,$target.knownname,this.ship.distanceto.{$target},$FiringRange]" chance="$debugoutputchance" />
                </do_else>
              </do_if>
              <do_else>
                <debug_text text="'%1 OOS. Apply attack fail of %2 against %3'.[player.age,this.ship.knownname,$target.knownname]" chance="$debugoutputchance" />
              </do_else>
            </do_if>
          </do_if>
          <do_else>
            <remove_value name="$enemies.{$i}" />
          </do_else>

          <do_if value="$MaxEnemies gt 0">
            <set_value name="$MaxEnemies" operation="subtract"/>
          </do_if>
        </do_all>
        <!-- Avoid an infite loop-->
        <do_if value="player.age" min="$attacktime">
          <break/>
        </do_if>
      </do_while>

	  <signal_objects object="player.galaxy" param="'learned.something'" param2="[this, ware.inv_virtualseminarcombat, 'kill']" />


      <!-- Continue if the Config is Attack  or if there is still a target -->
      <do_if value="@this.$config_attackenemies or $target.isoperational">
        <wait min="5s" max="10s" />
        <resume label="FindEnemies"/>
      </do_if>

      <cease_fire object="this.ship" weapontype="combat"/>

      <remove_value name="this.$missiles" />
      <remove_value name="this.$dronetargetsShare" />

    </actions>
  </attention>
  <on_abort>
    <remove_value name="this.$missiles" />
    <remove_value name="this.$dronetargetsShare" />
  </on_abort>
</aiscript>