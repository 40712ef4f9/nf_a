<?xml version="1.0" encoding="ISO-8859-1" ?>
<mdscript name="NF_BASE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../libraries/md.xsd">
	<cues>
		<cue name="NF_BASE_patch" instantiate="true">
			<conditions>
				<check_any>
					<event_cue_signalled cue="md.Setup.GameStart"/>
					<event_game_loaded />
					<event_player_created />
				</check_any>
			</conditions>
			<delay min="150ms" />
			<actions>
				<remove_value name="md.$shipparts"/>
				<remove_value name="global.$BR_range_table"/>
				<do_if value="md.$NFMMprocessesdSectors?" negate="true">
					<include_actions ref="md.NF_MapMaster.NFMM_Worker" />
					<append_to_list name="md.$NFMMprocessesdSectors" exact="'NF_BASE'"/>
				</do_if>
				<do_elseif value="md.$NFMMprocessesdSectors? and player.age lt 3min and md.$NFMMprocessesdSectors.indexof.{'NF_BASE'} == 0">
					<append_to_list name="md.$NFMMprocessesdSectors" exact="'NF_BASE'"/>
				</do_elseif>
				<do_elseif value="md.$NFMMprocessesdSectors? and player.age ge 3min and md.$NFMMprocessesdSectors.indexof.{'NF_BASE'} == 0">
					<include_actions ref="md.NF_MapMaster.NFMM_Worker" />
					<append_to_list name="md.$NFMMprocessesdSectors" exact="'NF_BASE'"/>
				</do_elseif>

				<do_if value="global.$MICT_LR_Ships?" negate="true">
					<create_list name="global.$MICT_LR_Ships"/>
				</do_if>
				<do_if value="md.$boardingvessel_small?" negate="true">
					<create_list name="md.$boardingvessel_small"/>
				</do_if>
				<do_if value="global.$boardingvessel_cap?" negate="true">
					<create_list name="global.$boardingvessel_cap"/>
				</do_if>
				<do_if value="global.$randumbuild_blacklist?" negate="true">
					<create_list name="global.$randumbuild_blacklist"/>
				</do_if>

				<do_if value="global.$mmpiratesy_pfactions?" negate="true">
					<create_list name="global.$mmpiratesy_pfactions"/>
				</do_if>
				<do_if value="global.$mmpiratesy_pfactions?">
					<set_value name="$todo" exact="
						[
								faction.reivers,
								faction.sovereignsyndicate,
								faction.hereticvanguards
						]
					"/>
					<do_all exact="$todo.count" counter="$j" >
						<do_if value="global.$mmpiratesy_pfactions.indexof.{$todo.{$j}}" negate="true">
							<append_to_list name="global.$mmpiratesy_pfactions" exact="$todo.{$j}"/>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>

				<do_if value="global.$move_escort_should_purpose_fight?" negate="true">
					<create_list name="global.$move_escort_should_purpose_fight"/>
				</do_if>
				<do_if value="global.$move_escort_should_purpose_fight?">
					<set_value name="$todo" exact="
						[
								macro.units_size_l_dv_kit_new_defence_01_macro
						]
					"/>
					<do_all exact="$todo.count" counter="$j" >
						<do_if value="global.$move_escort_should_purpose_fight.indexof.{$todo.{$j}}" negate="true">
							<append_to_list name="global.$move_escort_should_purpose_fight" exact="$todo.{$j}"/>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>

				<do_if value="global.$move_escort_bomber?" negate="true">
					<create_list name="global.$move_escort_bomber"/>
				</do_if>
				<do_if value="global.$move_escort_bomber?">
					<set_value name="$todo" exact="
						[
								macro.units_size_s_torpedo_bomber_macro, 
								macro.units_size_m_xenon_bomber_01_macro
						]
					"/>
					<do_all exact="$todo.count" counter="$j" >
						<do_if value="global.$move_escort_bomber.indexof.{$todo.{$j}}" negate="true">
							<append_to_list name="global.$move_escort_bomber" exact="$todo.{$j}"/>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>
				<!--
					NF Archi
				-->
				<do_if value="md.$NF_ArchiSpMacros?" negate="true">
					<create_list name="md.$NF_ArchiSpMacros"/>
				</do_if>
				<do_else>
					<do_all exact="md.$NF_ArchiSpMacros.count" counter="$j" reverse="true">
						<do_if value="typeof md.$NF_ArchiSpMacros.{$j} == datatype.macro" negate="true">
							<remove_value name="md.$NF_ArchiSpMacros.{$j}"/>
						</do_if>
					</do_all> 
				</do_else>
				<do_if value="md.$NF_ArchiSpMacrosShips?" negate="true">
					<create_list name="md.$NF_ArchiSpMacrosShips"/>
				</do_if>
				<do_else>
					<do_all exact="md.$NF_ArchiSpMacrosShips.count" counter="$j" reverse="true">
						<do_if value="typeof md.$NF_ArchiSpMacrosShips.{$j} == datatype.macro" negate="true">
							<remove_value name="md.$NF_ArchiSpMacrosShips.{$j}"/>
						</do_if>
					</do_all> 
				</do_else>
				<!--
					NF Config
				-->
				<do_if value="global.$nfconfig?" negate="true">
					<set_value name="global.$nfconfig" exact="table[]" comment="end $nfconfig"/>
				</do_if>
				<!-- check for basics -->
				<do_if value="global.$nfconfig?">
					<set_value name="$todo" exact="
						table[
							$Check = 1,
							$doBuildSt = 1,
							$doInv = 1,
							$EWS_Delay = 120s,
							$EWS_Level = 2,
							$EWS_Level_cutoff = 0,
							$EWS_MapSector = 0,
							$taxStationsPL = 1,
							$npcExpensesPL = 1,
							$AdvJump = 0,
							$autoRefuel = 1,
							$ignoreFuel = 0,
							$cheatMaxSkill = 0,
							$HyperDrive = 1,
							$buildOwnerNotice = 0,
							$cheatRestoreSkunk = 1,
							$payOnUrSy = 1
						]
					"/>
					<set_value name="$todoKeys" exact="$todo.keys.list.clone"/>
					<do_all exact="$todoKeys.count" counter="$j" >
						<do_if value="global.$nfconfig.{$todoKeys.{$j}}?" negate="true">
							<set_value name="global.$nfconfig.{$todoKeys.{$j}}" exact="$todo.{$todoKeys.{$j}}"/>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
					<remove_value name="$todoKeys"/>
				</do_if>

				<!--
					Basics
				-->
				<do_if value="param.itemtraderlists.equipmentlists.{1}.indexof.{[ware.inv_probe, 2, 5, 85]}" negate="true">
					<append_to_list name="param.itemtraderlists.equipmentlists.{1}" exact="[ware.inv_probe, 2, 5, 85]" />
				</do_if>
				<do_if value="param.itemtraderlists.equipmentlists2.{1}.indexof.{[ware.inv_probe, 2, 5, 85]}" negate="true">
					<append_to_list name="param.itemtraderlists.equipmentlists2.{1}" exact="[ware.inv_probe, 2, 5, 85]" />
				</do_if>
				<do_if value="param.itemtraderlists.equipmentlists.{1}.indexof.{[ware.inv_hyperdrivecrystal, 8, 15, 85]}" negate="true">
					<append_to_list name="param.itemtraderlists.equipmentlists.{1}" exact="[ware.inv_hyperdrivecrystal, 8, 15, 85]" />
				</do_if>
				<do_if value="param.itemtraderlists.equipmentlists2.{1}.indexof.{[ware.inv_hyperdrivecrystal, 8, 15, 85]}" negate="true">
					<append_to_list name="param.itemtraderlists.equipmentlists2.{1}" exact="[ware.inv_hyperdrivecrystal, 8, 15, 85]" />
				</do_if>

				<set_value name="global.$MICT_mmcarrier_is_active" exact="true"/>
				
				<set_value name="global.$WWX_mmcarrier_is_active" exact="true"/>
				<set_value name="global.$WWX_mmboarding_is_active" exact="true"/>
				<!--
					Carriers
				-->
				<do_if value="global.$mmcarriers?">
					<set_value name="$todo" exact="
						[
								macro.units_size_l_kit_carrier_01_macro,
								macro.units_size_l_kit_carrier_02_macro,
								macro.units_size_l_kit_repairship_macro,
								macro.units_size_xl_kit_destroyer_01_macro,
								macro.units_size_xl_capital_destroyer_1_mk2_macro,
								macro.units_size_xl_cs_omicron_ship_02_mk2_macro,
								macro.units_size_xl_cs_omicron_ship_02_xc_macro,
								macro.units_size_xl_cs_omicron_ship_02_y_macro,
								macro.units_size_xl_cs_omicron_ship_02_pir_macro,
								macro.units_size_xl_cs_omicron_ship_02_mk5_macro,
								macro.units_size_xl_cs_omicron_repairship_02_macro,
								macro.units_size_xl_cs_omicron_ship_04_mk2_macro,
								macro.units_size_xl_split_m1_macro,
								macro.units_size_xl_split_m1s_macro,
								macro.units_size_xl_xenon_01_c_macro
						]
					"/>
					<do_all exact="$todo.count" counter="$j" >
						<do_if value="global.$mmcarriers.indexof.{$todo.{$j}}" negate="true">
							<append_to_list name="global.$mmcarriers" exact="$todo.{$j}"/>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>
				<do_if value="global.$mmcarriers_xl?">
					<set_value name="$todo" exact="
						[
								macro.units_size_l_kit_repairship_macro,
								macro.units_size_xl_cs_omicron_repairship_02_macro
						]
					"/>
					<do_all exact="$todo.count" counter="$j" >
						<do_if value="global.$mmcarriers_xl.indexof.{$todo.{$j}}" negate="true">
							<append_to_list name="global.$mmcarriers_xl" exact="$todo.{$j}"/>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>
				<do_if value="md.$mmc_explorers?">
					<set_value name="$todo" exact="
						[
								macro.units_size_s_pmc_xen_sat_macro,
								macro.units_size_s_ship_04_p_macro
						]
					"/>
					<do_all exact="$todo.count" counter="$j" >
						<do_if value="md.$mmc_explorers.indexof.{$todo.{$j}}" negate="true">
							<append_to_list name="md.$mmc_explorers" exact="$todo.{$j}"/>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>

				<!--
					(Mict) LR
				-->
				<do_if value="global.$MICT_LR_Ships?">
					<set_value name="$todo" exact="
						[
								macro.units_size_xl_red_destroyer_macro,
								macro.units_size_l_single_attack_ship_macro,
								macro.units_size_xl_van_destroyer_macro,
								macro.units_size_xl_cs_omicron_ship_02_5_macro,
								macro.units_size_xl_cs_omicron_ship_02_mk2_macro,
								macro.units_size_l_cs_omicron_ship_03_sa_macro
						]
					"/>
					<do_all exact="$todo.count" counter="$j" >
						<do_if value="global.$MICT_LR_Ships.indexof.{$todo.{$j}}" negate="true">
							<append_to_list name="global.$MICT_LR_Ships" exact="$todo.{$j}"/>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>

				<!--
					Blacklist randombuild
				-->
				<do_if value="global.$randumbuild_blacklist?">
					<set_value name="$todo" exact="
						[
								macro.units_size_xl_builder_ship_plot_01_macro,
								macro.units_size_xl_builder_ship_macro,
								macro.units_size_xl_builder_ship_dv_macro,
								macro.units_size_xl_builder_ship_ol_macro,
								macro.units_size_xl_capital_destroyer_1_mk2_macro,
								macro.units_size_xl_cs_omicron_ship_02_mk5_macro,
								macro.units_size_xl_cs_omicron_repairship_02_macro,
								macro.units_size_xl_kit_cargo_01_macro,
								macro.units_size_l_kit_fuel_03_macro,
								macro.units_size_l_kit_repairship_macro,
								macro.units_size_xl_builder_xenon_next_macro,
								macro.units_size_l_xenon_outk_macro
						]
					"/>
					<do_all exact="$todo.count" counter="$j" >
						<do_if value="global.$randumbuild_blacklist.indexof.{$todo.{$j}}" negate="true">
							<append_to_list name="global.$randumbuild_blacklist" exact="$todo.{$j}"/>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>

				<!--
					capital / s + m boardingvessels
				-->
				<do_if value="md.$boardingvessel_small?">
					<set_value name="$todo" exact="
						[
								macro.units_size_m_boarding_macro
						]
					"/>
					<do_all exact="$todo.count" counter="$j" >
						<do_if value="md.$boardingvessel_small.indexof.{$todo.{$j}}" negate="true">
							<append_to_list name="md.$boardingvessel_small" exact="$todo.{$j}"/>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>
				<do_if value="global.$boardingvessel_cap?">
					<set_value name="$todo" exact="
						[
								macro.units_size_l_troop_transporter1_macro,
								macro.units_size_l_troop_transporter5_macro
						]
					"/>
					<do_all exact="$todo.count" counter="$j" >
						<do_if value="global.$boardingvessel_cap.indexof.{$todo.{$j}}" negate="true">
							<append_to_list name="global.$boardingvessel_cap" exact="$todo.{$j}"/>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>

				<!--
					PimpMyRide support
				-->
				<do_if value="md.$mmpimpmyride?">
					<!--
							[macro.units_size_m_universal_transport_macro, macro.units_size_m_crystal_collector_macro],
							[macro.units_size_m_boarding_macro, macro.units_size_m_ice_collector_macro],
					-->
					<set_value name="$todo" exact="
						[
							[macro.units_size_m_crystal_collector_macro, macro.units_size_m_universal_transport_macro],
							[macro.units_size_m_nividium_collector_macro, macro.units_size_m_universal_transport_macro],
							[macro.units_size_m_ore_collector_macro, macro.units_size_m_universal_transport_macro],
							[macro.units_size_m_silicon_collector_macro, macro.units_size_m_universal_transport_macro],
							[macro.units_size_s_ship_pmc_03_macro, macro.units_size_s_pmc_xen_sat_macro],
							[macro.units_size_s_ship_pmc_02_macro, macro.units_size_s_pmc_xen_sat_macro],
							[macro.units_size_s_ship_pmc_01_macro, macro.units_size_s_pmc_xen_sat_macro],
							[macro.units_size_s_ship_ar_military_03_macro, macro.units_size_s_ship_ar_military_03_bomber_macro],
							[macro.units_size_s_ship_ar_military_03_macro, macro.units_size_s_ship_ar_military_03_cargo_macro],
							[macro.units_size_m_canteran_01_macro, macro.units_size_m_diplomatic_tp_macro],
							[macro.units_size_m_ice_collector_macro, macro.units_size_m_boarding_macro]
						]
					"/>
					<!-- Golem -->
					<append_to_list name="$todo" exact="[macro.units_size_s_ship_pmc_03_macro, macro.units_size_m_pmc_xen_02_macro]" chance="(player.age gt 24h)*100"/>
					<append_to_list name="$todo" exact="[macro.units_size_s_ship_pmc_02_macro, macro.units_size_m_pmc_xen_02_macro]" chance="(player.age gt 24h)*100"/>
					<append_to_list name="$todo" exact="[macro.units_size_s_ship_pmc_01_macro, macro.units_size_m_pmc_xen_02_macro]" chance="(player.age gt 24h)*100"/>
					<!-- Golem mk2 -->
					<append_to_list name="$todo" exact="[macro.units_size_m_pmc_xen_02_macro, macro.units_size_m_pmc_xen_02s_macro]" chance="(player.age gt 48h)*100"/>

					<do_all exact="$todo.count" counter="$j" >
						<do_if value="md.$mmpimpmyride.{'$%1'.[$todo.{$j}.{1}.id]}? and md.$mmpimpmyride.{'$%1'.[$todo.{$j}.{1}.id]}.indexof.{$todo.{$j}.{2}}" negate="true">
							<do_if value="md.$mmpimpmyride.$basemacros.indexof.{$todo.{$j}.{1}}" negate="true">
								<append_to_list name="md.$mmpimpmyride.$basemacros" exact="$todo.{$j}.{1}"/>
							</do_if>
							<do_if value="md.$mmpimpmyride.{'$%1'.[$todo.{$j}.{1}.id]}?" negate="true">
								<set_value name="md.$mmpimpmyride.{'$%1'.[$todo.{$j}.{1}.id]}" exact="[]"/>
							</do_if>
							<do_if value="md.$mmpimpmyride.{'$%1'.[$todo.{$j}.{1}.id]}.indexof.{$todo.{$j}.{2}}" negate="true">
								<append_to_list name="md.$mmpimpmyride.{'$%1'.[$todo.{$j}.{1}.id]}" exact="$todo.{$j}.{2}"/>
							</do_if>
						</do_if>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>
				<!-- cap ships -->
				<do_if value="md.$todo_ships_capital_mod?">
						<set_value name="$todo" exact="
							[
								macro.units_size_xl_cs_omicron_repairship_02_macro,
								macro.units_size_l_cs_omicron_ship_03_sa_macro,
								macro.units_size_xl_cs_omicron_ship_02_5_macro,
								macro.units_size_xl_cs_omicron_ship_02_y_macro,
								macro.units_size_xl_cs_omicron_ship_02_dc_macro,
								macro.units_size_xl_cs_omicron_ship_02_x_macro,
								macro.units_size_xl_cs_omicron_ship_02_xc_macro,
								macro.units_size_xl_cs_omicron_ship_02_mk5_macro,
								macro.units_size_xl_cs_omicron_ship_02_yz_macro,
								macro.units_size_xl_cs_omicron_ship_02_mk2_macro,
								macro.units_size_xl_cs_omicron_ship_03_mk2_macro,
								macro.units_size_xl_cs_omicron_ship_04_mk2_macro,
								macro.units_size_xl_capital_destroyer_1_mk2_macro,
								macro.units_size_xl_capital_destroyer_2_mk2_macro,
								macro.units_size_xl_capital_destroyer_2_cargo_macro,
								macro.units_size_xl_kit_cargo_01_macro,
								macro.units_size_l_kit_cargo_03_macro,
								macro.units_size_l_kit_cargo_03s_macro,
								macro.units_size_l_kit_cargo_03e_macro,
								macro.units_size_l_kit_miner_03s_macro,
								macro.units_size_l_kit_minerl_03s_macro,
								macro.units_size_l_kit_fuel_03_macro,
								macro.units_size_l_kit_repairship_macro,
								macro.units_size_xl_kit_destroyer_01_macro,
								macro.units_size_xl_cs_omicron_ship_02_pir_macro,
								macro.units_size_l_dv_kit_new_defence_plus_macro,
								macro.units_size_l_kit_hybrid_q_macro,
								macro.units_size_xl_kit_pirate_10_macro,
								macro.units_size_xl_split_m1s_macro,
								macro.units_size_xl_split_m2r_macro,
								macro.units_size_xl_split_m2s_macro,
								macro.units_size_xl_split_tls_macro,
								macro.units_size_xl_split_tls_gas_macro,
								macro.units_size_xl_split_tls_ore_macro,
								macro.units_size_l_xenon_01_cargo_macro,
								macro.units_size_l_xenon_01_miner_macro,
								macro.units_size_l_xenon_01_collector_macro,
								macro.units_size_l_xenon_01_dc_macro,
								macro.units_size_xl_xenon_01_c_macro,
								macro.units_size_l_xenon_outk_macro,
								macro.units_size_xl_builder_outpost_macro
							]
						"/>
					<do_all exact="$todo.count" counter="$j" >
						<append_to_list name="md.$todo_ships_capital_mod" exact="$todo.{$j}"/>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>
				<!-- s + m ships FIGHT -->
				<do_if value="md.$todo_ships_small_others_fight?">
						<set_value name="$todo" exact="
							[
								macro.units_size_s_pmc_xen_sat_macro,
								macro.units_size_m_pmc_xen_02s_macro,
								macro.units_size_m_xenon_bomber_01_macro,
								macro.units_size_s_ship_ar_military_03_bomber_macro
							]
						"/>
					<do_all exact="$todo.count" counter="$j" >
						<append_to_list name="md.$todo_ships_small_others_fight" exact="$todo.{$j}"/>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>
				<!-- s + m ships TRADE -->
				<do_if value="md.$todo_ships_small_others_trade?">
						<set_value name="$todo" exact="
							[
								macro.units_size_s_ship_04_p_macro,
								macro.units_size_m_universal_transport_macro,
								macro.units_size_m_boarding_macro,
								macro.units_size_s_ship_ar_military_03_cargo_macro
							]
						"/>
					<do_all exact="$todo.count" counter="$j" >
						<append_to_list name="md.$todo_ships_small_others_trade" exact="$todo.{$j}"/>
					</do_all> 
					<remove_value name="$todo"/>
				</do_if>
				<!-- Factions -->
				<do_if value="md.$todo_factions?">
					<append_to_list name="md.$todo_factions" exact="[
						faction.acmecorp,
						faction.deepwater
						]"/>
				</do_if>

				<do_if value="md.$FieldsOfOpportunity? and md.$FieldsOfOpportunity">
					<include_actions ref="NF_BASE_TO" />
				</do_if>
				<do_if value="md.$DLC2_Clusters? and md.$DLC2_Clusters.count">
					<include_actions ref="NF_BASE_HoL" />
				</do_if>
				<!-- set ON -->
				<do_if value="global.$nfconfig.$Check" negate="true">
					<set_value name="global.$nfconfig.$Check" exact="1"/>
				</do_if>
				
				<do_if value="global.$nfStationdestructionHulls?" negate="true">
					<set_value name="global.$nfStationdestructionHulls" exact="table[
							$asteroid_turret_m_01_macro	=	95,
							$khaak_hive_01_macro	=	95,
							$khaak_weaponplatform_macro	=	46,
							$landmarks_te_tradestation_macro	=	10,
							$landmarks_unique_aqueduct_macro	=	10,
							$landmarks_unique_ar_badlands_colony_macro	=	10,
							$landmarks_unique_ar_lonely_giant_macro	=	31,
							$landmarks_unique_core_dig_macro	=	10,
							$landmarks_unique_split_lostcolony_macro	=	20,
							$masstraffic_station_01_macro	=	18,
							$masstraffic_station_02_macro	=	10,
							$masstraffic_station_03_macro	=	10,
							$mine_te_ore_s_macro	=	49,
							$struct_at_xen_xenon_hive_macro	=	10,
							$struct_at_xen_xenon_outpost_macro	=	10,
							$struct_at_xen_xenon_portal_macro	=	10,
							$struct_bt_alb_big_ships_yard_macro	=	15,
							$struct_bt_alb_cattle_ranch_macro	=	10,
							$struct_bt_alb_cell_refinery_macro	=	10,
							$struct_bt_alb_constructionmaterial_production_macro	=	10,
							$struct_bt_alb_crystal_refinement_macro	=	11,
							$struct_bt_alb_drone_complex_macro	=	11,
							$struct_bt_alb_drone_factory_macro	=	16,
							$struct_bt_alb_farm_complex_macro	=	10,
							$struct_bt_alb_food_production_complex_macro	=	10,
							$struct_bt_alb_food_production_plant_macro	=	10,
							$struct_bt_alb_fuelstation_macro	=	10,
							$struct_bt_alb_gatedefence_macro	=	35,
							$struct_bt_alb_high_energy_construction_macro	=	18,
							$struct_bt_alb_hightec_construction_macro	=	10,
							$struct_bt_alb_laboratory_macro	=	10,
							$struct_bt_alb_medical_supplies_macro	=	10,
							$struct_bt_alb_metal_works_macro	=	11,
							$struct_bt_alb_servicedock_macro	=	35,
							$struct_bt_alb_shippart_production_macro	=	10,
							$struct_bt_alb_shipyard_2_macro	=	15,
							$struct_bt_alb_small_ships_complex_macro	=	18,
							$struct_bt_alb_small_ships_yard_macro	=	31,
							$struct_bt_alb_solar_power_plant_macro	=	28,
							$struct_bt_alb_spice_farm_macro	=	12,
							$struct_bt_alb_tech_complex_macro	=	10,
							$struct_bt_alb_warehouse_macro	=	14,
							$struct_bt_alb_water_destillery_macro	=	11,
							$struct_bt_alb_weaponry_complex_macro	=	10,
							$struct_bt_alb_weaponry_production_macro	=	10,
							$struct_bt_alb_wheat_farm_macro	=	10,
							$struct_bt_dv_canteran_ringstation_01_macro	=	10,
							$struct_bt_dv_shipyard_macro	=	18,
							$struct_bt_dv_solar_power_plant_macro	=	19,
							$struct_bt_dv_water_destillery_macro	=	10,
							$struct_bt_dv_wheat_farm_macro	=	11,
							$struct_bt_hoa_shipyard_macro	=	15,
							$struct_bt_hol_big_ships_yard_macro	=	15,
							$struct_bt_hol_dock_macro	=	10,
							$struct_bt_hol_dock_pir_macro	=	10,
							$struct_bt_ol_bofu_plant_macro	=	11,
							$struct_bt_ol_cell_refinery_macro	=	26,
							$struct_bt_ol_construction_material_macro	=	35,
							$struct_bt_ol_crystal_refinement_macro	=	31,
							$struct_bt_ol_drone_complex_macro	=	38,
							$struct_bt_ol_drone_factory_macro	=	35,
							$struct_bt_ol_farm_complex_macro	=	38,
							$struct_bt_ol_fuelstation_macro	=	10,
							$struct_bt_ol_high_energy_construction_macro	=	40,
							$struct_bt_ol_hightec_construction_macro	=	28,
							$struct_bt_ol_laboratory_macro	=	27,
							$struct_bt_ol_medical_supplies_macro	=	30,
							$struct_bt_ol_metalworks_macro	=	28,
							$struct_bt_ol_plankton_tank_macro	=	36,
							$struct_bt_ol_shippartproduction_macro	=	22,
							$struct_bt_ol_shipyard_macro	=	44,
							$struct_bt_ol_small_ships_complex_macro	=	21,
							$struct_bt_ol_small_ships_yard_macro	=	40,
							$struct_bt_ol_solar_power_plant_macro	=	36,
							$struct_bt_ol_soy_farm_macro	=	33,
							$struct_bt_ol_spacefuel_production_macro	=	13,
							$struct_bt_ol_spice_farm_macro	=	35,
							$struct_bt_ol_tech_complex_macro	=	28,
							$struct_bt_ol_tradestation_macro	=	22,
							$struct_bt_ol_tradestation_sy_macro	=	21,
							$struct_bt_ol_water_destillery_macro	=	27,
							$struct_bt_ol_weaponrycomplex_macro	=	22,
							$struct_bt_ol_weaponryproduction_macro	=	22,
							$struct_bt_pir_shipyard_2_macro	=	15,
							$struct_bt_pir_small_ships_complex_macro	=	18,
							$struct_bt_pirate_shipyard_macro	=	15,
							$struct_bt_sy_heretic_macro	=	44,
							$struct_bt_te_shippartproduction_macro	=	22,
							$struct_econ_agri_ar_unique_megafarmlands_macro	=	10,
							$struct_econ_cw_generic_te_water_macro	=	10,
							$struct_econ_ref_ar_pmc_north_macro	=	10,
							$struct_econ_special_piratestation_macro	=	18,
							$struct_econ_unique_ar_spp_xl_macro	=	27,
							$struct_econ_weapon_ar_defence_pl_macro	=	13,
							$terracorp_hq_01_macro	=	10,
							$vacanaltd_hq_01_macro	=	10,
							$xenon_asteroid_01_base_01_macro	=	12,
							$xenon_asteroid_01_base_01b_macro	=	12,
							$xenon_asteroid_02_base_02_macro	=	33,
							$xenon_asteroid_shipyard_macro	=	23,
							$xenon_small_station_01_macro	=	10,
							$xenon_weaponplatform_macro	=	15
						]"/>
				</do_if>
			</actions>
		</cue>
		<library name="NF_BASE_TO">
			<actions>
				<append_to_list name="global.$mmpiratesy_pfactions" exact="faction.{'%1'.['teladigunrunner']}"/> 
				<append_to_list name="global.$mmpiratesy_pfactions" exact="faction.{'%1'.['teladidrugrunner']}"/> 
			</actions>
		</library>
		<library name="NF_BASE_HoL">
			<actions>
				<append_to_list name="global.$mmpiratesy_pfactions" exact="faction.{'%1'.['atlas']}"/> 
			</actions>
		</library>

		<!--  Config  -->
		<cue name="NF_BASE_config_com" instantiate="true" >
			<conditions>
				<check_any>
					<event_conversation_started conversation="default" />
					<event_conversation_returned_to_section section="default" />
				</check_any>
				<check_value value="[faction.player, faction.enemy, faction.criminal, faction.smuggler, faction.neutral, faction.friend, faction.ownerless].indexof.{event.object.owner}" negate="true"/>
				<check_value value="event.object.container.isclass.station" />
				<check_value value="event.object.owner.relationto.{faction.player} gt faction.player.relation.neutral.min"/>
				<check_value value="event.object.container.zone.policefaction and event.object == event.object.container.sector.representative.{event.object.container.zone.policefaction}.{entitytype.lawenforcement}" />
			</conditions>
			<actions>
				<add_player_choice_sub text="{40002,300}" position="bottom_left" section="nfconf_do" />
			</actions>
		</cue>
		<cue name="NF_BASE_config" instantiate="true">
			<conditions>
				<check_any>
					<event_conversation_next_section sectionprefix="nfconf_do"/>
					<event_conversation_returned_to_section sectionprefix="nfconf_do" />
				</check_any>
			</conditions>
			<actions>
				<set_value name="$backlink" exact="100" />
				<set_value name="$on" exact="{1001,2648}" />
				<set_value name="$off" exact="{1001,2649}" />

				<!-- Modify -->
				<do_if value="event.param2? and typeof event.param2 == datatype.list and (typeof event.param2.{1}).isstring and (typeof event.param2.{2}).isstring">
					<set_value name="$conf_min" exact="if event.param2.{3}? and event.param2.{3} then event.param2.{3} else 0" />
					<set_value name="$conf_max" exact="if event.param2.{4}? and event.param2.{4} then event.param2.{4} else 1" />
					<set_value name="$conf_step" exact="if event.param2.{5}? and event.param2.{5} then event.param2.{5} else 1" />
					<do_if value="event.param2.{5}? and $conf_step and $conf_max gt 1">
						<set_value name="$tmp" exact="$conf_max - $conf_min" />
						<do_if value="$conf_step ge 1">
							<set_value name="$conf_step" exact="$tmp / $conf_step" />
						</do_if>
					</do_if>
					<remove_value name="$tmp"/>

					<do_if value="global.$nfconfig.{'$%1'.[event.param2.{1}]}?" negate="true">
						<set_value name="global.$nfconfig.{'$%1'.[event.param2.{1}]}" exact="0" />
					</do_if>

					<!-- do -->
					<do_if value="event.param2.{2} == 'do' and global.$nfconfig.{'$%1'.[event.param2.{1}]}">
						<set_value name="global.$nfconfig.{'$%1'.[event.param2.{1}]}" exact="0" />
					</do_if>
					<do_elseif value="event.param2.{2} == 'do' and not global.$nfconfig.{'$%1'.[event.param2.{1}]}">
						<set_value name="global.$nfconfig.{'$%1'.[event.param2.{1}]}" exact="1" />
					</do_elseif>
					<!-- add/sub -->
					<do_if value="event.param2.{2} == 'add' and global.$nfconfig.{'$%1'.[event.param2.{1}]} == $conf_max">
						<set_value name="global.$nfconfig.{'$%1'.[event.param2.{1}]}" exact="$conf_min" />
					</do_if>
					<do_elseif value="event.param2.{2} == 'add' and (global.$nfconfig.{'$%1'.[event.param2.{1}]} + $conf_step) le $conf_max">
						<set_value name="global.$nfconfig.{'$%1'.[event.param2.{1}]}" exact="$conf_step" operation="add"/>
					</do_elseif>
					<do_elseif value="event.param2.{2} == 'add' and (global.$nfconfig.{'$%1'.[event.param2.{1}]} + $conf_step) gt $conf_max">
						<set_value name="global.$nfconfig.{'$%1'.[event.param2.{1}]}" exact="$conf_max" />
					</do_elseif>
					<do_if value="event.param2.{2} == 'sub' and (global.$nfconfig.{'$%1'.[event.param2.{1}]} - $conf_step) ge $conf_min">
						<set_value name="global.$nfconfig.{'$%1'.[event.param2.{1}]}" exact="$conf_step" operation="subtract"/>
					</do_if>
					<do_elseif value="event.param2.{2} == 'sub' and (global.$nfconfig.{'$%1'.[event.param2.{1}]} - $conf_step) lt $conf_min">
						<set_value name="global.$nfconfig.{'$%1'.[event.param2.{1}]}" exact="$conf_min" />
					</do_elseif>

					<remove_value name="$tmp"/>
					<remove_value name="$conf_step"/>
					<remove_value name="$conf_max"/>
					<remove_value name="$conf_min"/>
				</do_if>

				<!-- Menu -->
				<do_if value="event.param" exact="'nfconf_do_global'">
					<add_player_choice section="nfconf_do_global" text="{40002,312}.[if global.$nfconfig.$doBuildSt then $on else $off]"		position="top_left"		choiceparam="['doBuildSt', 'do']" tooltip="{40002,313}" />
					<add_player_choice section="nfconf_do_global" text="{40002,314}.[if global.$nfconfig.$doInv then $on else $off]"			position="left"			choiceparam="['doInv', 'do']" />

					<add_player_choice section="nfconf_do_global" text="{40002,316}.[if global.$nfconfig.$AdvJump then if global.$nfconfig.$AdvJump == 2 then {40002,318} else {40002,320} else $off]"	position="top_right"	choiceparam="['AdvJump', 'add', 0, 2]" />
					<add_player_choice section="nfconf_do_global" text="{40002,330}.[if global.$nfconfig.$HyperDrive then $on else $off]"		position="right"		choiceparam="['HyperDrive', 'do']" tooltip="{40002,331}"/>

				</do_if>
				<do_elseif value="event.param" exact="'nfconf_do_ews'">
					<add_player_choice		section="nfconf_do_ews" text="{40002,322}.[global.$nfconfig.$EWS_Level]"																position="top_left"		choiceparam="['EWS_Level', 'add', 1, 4]" tooltip="{40002,323}"/>
					<add_player_choice_sub	section="nfconf_do_detail" text="{40002,324}.[if global.$nfconfig.$EWS_Level_cutoff then global.$nfconfig.$EWS_Level_cutoff else $off]"	position="left"			choiceparam="['EWS_Level_cutoff', 'open', 0, 50, 10]" tooltip="{40002,325}"/>
					<add_player_choice_sub	section="nfconf_do_detail" text="{40002,326}.[global.$nfconfig.$EWS_Delay]"																position="bottom_left"	choiceparam="['EWS_Delay', 'open', 0s, 240s, 3]"  />
					<add_player_choice		section="nfconf_do_ews" text="{40002,328}.[if global.$nfconfig.$EWS_MapSector then $on else $off]"										position="top_right"	choiceparam="['EWS_MapSector', 'do']" tooltip="{40002,329}" />
				</do_elseif>
				<do_elseif value="event.param" exact="'nfconf_do_player'">
					<add_player_choice section="nfconf_do_player" text="{40002,340}.[if global.$nfconfig.$buildOwnerNotice then $on else $off]"	position="top_left"		choiceparam="['buildOwnerNotice', 'do']" tooltip="{40002,341}"/>
					<add_player_choice section="nfconf_do_player" text="{40002,332}.[if global.$nfconfig.$taxStationsPL then $on else $off]"	position="left"			choiceparam="['taxStationsPL', 'do']" tooltip="{40002,333}" />
					<add_player_choice section="nfconf_do_player" text="{40002,334}.[if global.$nfconfig.$npcExpensesPL then $on else $off]"	position="bottom_left"	choiceparam="['npcExpensesPL', 'do']" tooltip="{40002,335}" />
					<!--add_player_choice section="nfconf_do_player" text="{40002,336}.[if global.$nfconfig.$limitCluster then $on else $off]"	position="top_right"	choiceparam="['limitCluster', 'do']"  /-->
					<add_player_choice section="nfconf_do_player" text="{40002,338}.[if global.$nfconfig.$autoRefuel then $on else $off]"		position="right"		choiceparam="['autoRefuel', 'do']" />
				</do_elseif>
				<do_elseif value="event.param" exact="'nfconf_do_player_cheat'">
					<add_player_choice section="nfconf_do_player_cheat" text="{40002,342}.[if global.$nfconfig.$ignoreFuel then $on else $off]"	position="top_left"		choiceparam="['ignoreFuel', 'do']" tooltip="{40002,343}"/>
					<add_player_choice section="nfconf_do_player_cheat" text="{40002,344}.[if global.$nfconfig.$cheatMaxSkill then $on else $off]"	position="top_right"	choiceparam="['cheatMaxSkill', 'do']" />
					<add_player_choice section="nfconf_do_player_cheat" text="{40002,345}.[if global.$nfconfig.$cheatRestoreSkunk then $on else $off]"	position="left"	choiceparam="['cheatRestoreSkunk', 'do']" tooltip="{40002,346}" />
				</do_elseif>
				<do_elseif value="event.param" exact="'nfconf_do_detail'" chance="(event.param2? and typeof event.param2 == datatype.list and (typeof event.param2.{1}).isstring)*100">
					<create_list name="$add" />
					<create_list name="$sub" />
					<append_to_list name="$add" exact="event.param2.{1}" />
					<append_to_list name="$add" exact="'add'" />
					<append_to_list name="$add" exact="event.param2.{3}" />
					<append_to_list name="$add" exact="event.param2.{4}" />
					<append_to_list name="$add" exact="event.param2.{5}" chance="(event.param2.{5}?)*100"/>
					<append_to_list name="$sub" exact="event.param2.{1}" />
					<append_to_list name="$sub" exact="'sub'" />
					<append_to_list name="$sub" exact="event.param2.{3}" />
					<append_to_list name="$sub" exact="event.param2.{4}" />
					<append_to_list name="$sub" exact="event.param2.{5}" chance="(event.param2.{5}?)*100"/>

					<add_player_choice			text="{2802,2216}"														position="top_left"		section="nfconf_do_detail" choiceparam="$add" />
					<add_player_choice_return	text="'value [%1]'.[global.$nfconfig.{'$%1'.[event.param2.{1}]}]"	position="left" comment="Back" />
					<add_player_choice			text="{2802,2217}"														position="bottom_left"	section="nfconf_do_detail" choiceparam="$sub" />

					<remove_value name="$sub"/>
					<remove_value name="$add"/>
				</do_elseif>
				<do_else>
					<add_player_choice_sub text="{40002,304}" position="top_left"	section="nfconf_do_ews" />
					<add_player_choice_sub text="{40002,302}" position="left"		section="nfconf_do_global" />

					<add_player_choice_sub text="{40002,306}" position="top_right"	section="nfconf_do_player" />
					<add_player_choice_sub text="{40002,308}" position="right"		section="nfconf_do_player_cheat" />
				</do_else>

				<add_player_choice_return text="{1002,20}" position="bottom_right" comment="Back" chance="$backlink"/>
				<!-- clean -->
				<remove_value name="$backlink"/>
				<remove_value name="$on"/>
				<remove_value name="$off"/>
			</actions>
		</cue>	

		<cue name="NF_BASE_patchhelper" instantiate="true">
			<conditions>
				<event_object_signalled object="player.galaxy" param="'do.patch.station'" />
			</conditions>
			<delay min="10s" max="20s"/>
			<actions>
				<set_value name="$done" exact="0"/>
				<do_if value="event.param2? and typeof event.param2 == datatype.list">
					<set_value name="$todo" exact="event.param2"/>
				</do_if>
				<do_else>
					<set_value name="$todo" exact="[ event.param2 ]"/>
				</do_else>

				<do_all exact="$todo.count" counter="$count"> 
					<do_if value="$todo.{$count} and typeof $todo.{$count} == datatype.macro">
						<patch_macros macro="$todo.{$count}"/>
						<set_value name="$done" operation="add"/>
					</do_if>
					<do_elseif value="$todo.{$count} and $todo.{$count}.exists">
						<patch_macro object="$todo.{$count}"/>
						<set_value name="$done" operation="add"/>
					</do_elseif>
				</do_all>
				<debug_text text="'Patch: %2 of %1 done'.[$todo.count, $done]" filter="error" chance="0" />
				<remove_value name="$todo"/>
				<remove_value name="$done"/>
			</actions>
		</cue>

		<cue name="NF_BASE_SY" instantiate="true" namespace="this">
			<conditions>
				<event_object_signalled object="player.galaxy" param="'do.start.syscript'" />
			</conditions>
			<delay min="3s" max="5s"/>
			<actions>
				<set_value name="$text" exact="event.param2" />
				<do_if value="event.param2? and event.param2.isclass.station and event.param2.canbuildships">
					<set_value name="$text" exact="' ' + event.param2.knownname" operation="add"/>
					<do_if value="event.param2.tradenpc and not event.param2.tradenpc.$orders?">
						<set_value name="$text" exact="' RESTART'" operation="add"/>
						<start_script object="event.param2.tradenpc" name="'trade.shipyard'"/>
					</do_if>
				</do_if>
				<debug_text text="$text" filter="error" chance="0"/>
				<remove_value name="$text"/>
				<find_dock_location container="event.param2" name="$ShiptraderDocks" dockpopulationtype="dockpopulationtype.ships" multiple="true" />
				<do_if value="$ShiptraderDocks.count and event.param2.tradenpc">
					<do_all exact="$ShiptraderDocks.count" counter="$j" >
						<set_value name="$DockHasShipTrader" exact="false" />
						<do_all exact="$ShiptraderDocks.{$j}.actors.count" counter="$k" >
							<do_if value="$ShiptraderDocks.{$j}.actors.{$k}.type == entitytype.shiptrader or $ShiptraderDocks.{$j}.actors.{$k}.type == entitytype.smallshiptrader">
								<set_remote_commable actor="$ShiptraderDocks.{$j}.actors.{$k}" remote="true" />
								<set_value name="$DockHasShipTrader" exact="true" />
							</do_if>
						</do_all>
						<do_if value="$DockHasShipTrader" negate="true">
							<!-- shiptrader / smallshiptrader -->
							<find_object_component name="$buildmodule" object="event.param2" class="class.buildmodule" checkoperational="false">
							  <match_buildsource sequence="$ShiptraderDocks.{$j}.component.sequence" stage="$ShiptraderDocks.{$j}.component.stage" />
							</find_object_component>
							<do_if value="$buildmodule">
								<create_platform_actor name="$Shiptrader" dockingbay="$ShiptraderDocks.{$j}.component" type="entitytype.shiptrader">
									<select race="race.argon" tags="tag.shiptrader"/>
									<owner exact="event.param2.trueowner"/>
								</create_platform_actor>
							</do_if>
							<do_else>
								<create_platform_actor name="$Shiptrader" dockingbay="$ShiptraderDocks.{$j}.component" type="entitytype.smallshiptrader">
									<select race="race.argon" tags="tag.smallshiptrader"/>
									<owner exact="event.param2.trueowner"/>
								</create_platform_actor>
							</do_else>
							<set_remote_commable actor="$Shiptrader" remote="true" />
							<share_actor_account actor="$Shiptrader" otherobject="event.param2.tradenpc" />
							<set_comm_handler actor="$Shiptrader" customhandler="true" />
							<remove_value name="$Shiptrader"/>
						</do_if>
						<remove_value name="$buildmodule"/>
						<remove_value name="$DockHasShipTrader"/>
					</do_all>
				</do_if>
				<remove_value name="$DockHasShipTrader"/>
			</actions>
		</cue>


		<!--
			<signal_objects object="player.galaxy" param="'learned.something'" param2="[this, ware.inv_virtualseminarnavigation]" />
		-->
		<cue name="NF_BASE_SkillNPC" instantiate="true" namespace="this">
			<conditions>
				<event_object_signalled object="player.galaxy" param="'learned.something'" />
				<check_value value="event.param2? and event.param2.{2}? and event.param2.{1}.exists and typeof event.param2.{2} == datatype.ware" />
				<check_value value="event.param2.{1}.exists and event.param2.{1}.combinedskill le 75 or (event.param2.{1}.isplayerowned and @global.$nfconfig.$cheatMaxSkill and event.param2.{1}.combinedskill le 99)" />
			</conditions>
			<actions>
			  <do_if value="event.param2.{1}.inventory.{event.param2.{2}}.count == (event.param2.{1}.combinedskill)i*10" comment="inv.count req 10 - 740">
				  <remove_inventory entity="event.param2.{1}" ware="event.param2.{2}" exact="event.param2.{1}.inventory.{event.param2.{2}}.count" />
				  <do_if value="event.param2.{1}.combinedskill" max="74">
					<set_value name="$Skill" exact="[skilltype.leadership, skilltype.navigation, skilltype.combat, skilltype.engineering, skilltype.management, skilltype.morale, skilltype.science]" />
					<do_all exact="$Skill.count" counter="$k">
						<do_if value="event.param2.{1}.skill.{$Skill.{$k}} lt 4" chance="(80 - event.param2.{1}.combinedskill)">
							<add_skill entity="event.param2.{1}" type="$Skill.{$k}" exact="1" />
							<break chance="if event.param2.{1}.skill.{$Skill.{$k}} == 4 then 100 else if event.param2.{1}.skill.{$Skill.{$k}} == 3 then 75 else 0" />
						</do_if>
					</do_all>
					<remove_value name="$Skill"/>
				  </do_if>
			  </do_if>
			  <do_elseif value="event.param2.{1}.isplayerowned and @global.$nfconfig.$cheatMaxSkill and event.param2.{1}.combinedskill le 99">
				<set_value name="$Skill" exact="[skilltype.leadership, skilltype.navigation, skilltype.combat, skilltype.engineering, skilltype.management, skilltype.morale, skilltype.science]" />
				<do_all exact="$Skill.count" counter="$k">
					<do_if value="event.param2.{1}.skill.{$Skill.{$k}} lt 4" >
						<add_skill entity="event.param2.{1}" type="$Skill.{$k}" exact="5-(event.param2.{1}.skill.{$Skill.{$k}})i" />
					</do_if>
				</do_all>
				<remove_value name="$Skill"/>
			  </do_elseif>
			  <do_elseif value="(event.param2.{1}.combinedskill)i" max="74">
				<add_inventory entity="event.param2.{1}" ware="event.param2.{2}" exact="if event.param2.{4}? then (event.param2.{4})i else 1" />
			  </do_elseif>
			  <debug_text chance="0" text="'%4 %5 %1 skilled inv:%2 cs:%3 :: %6'.[event.param2.{1}.knownname, event.param2.{1}.inventory.{event.param2.{2}}.count, event.param2.{1}.combinedskill, event.param2.{1}, event.param2.{1}.typename, @event.param2.{3}]"/>
			</actions>
		</cue>

		<!--
			<signal_objects object="player.galaxy" param="'Reload.Units'" param2="this.ship" />
		-->
		<cue name="NF_BASE_ReloadUnits" instantiate="true" namespace="this">
			<conditions>
				<event_object_signalled object="player.galaxy" param="'Reload.Units'" />
				<check_value value="event.param2.isoperational" />
				<check_value value="event.param2.units.count == 0" />
				<check_value value="event.param2.isplayerowned" negate="true" />
			</conditions>
			<actions>
				<set_value name="$Object" exact="event.param2"/>
				<set_value name="$Unitcapacity" exact="$Object.units.maxcount - $Object.units.count" />
				<do_if value="$Object.macro.ismacro.{global.$boardingvessel_cap} or $Object.macro.ismacro.{md.$boardingvessel_small}">
					<do_if  value="$Unitcapacity">
						<do_if value="$Object.isclass.[class.ship_xl, class.ship_l]">
							<add_units object="$Object" macro="macro.units_size_xs_transp_empty_macro" exact="1"/>
							<add_units object="$Object" macro="macro.units_size_xs_welder_drone_macro" min="1" max="[$Unitcapacity/6, 10].min"/>
							<set_value name="$Unitcapacity" exact="$Object.units.maxcount - $Object.units.count" />
						</do_if>

						<do_if value="($Object.isclass.[class.ship_xl, class.ship_l] and $Object.defencenpc) or $Object.isclass.[class.ship_m, class.ship_s]">
							<do_if value="$Unitcapacity">
								<do_any>
									<add_units object="$Object" category="unitcategory.marine" mk="3" min="1" max="$Unitcapacity/2" weight="40"/>
									<add_units object="$Object" category="unitcategory.marine" mk="2" min="1" max="$Unitcapacity/2" weight="60"/>
								</do_any>
								<set_value name="$Unitcapacity" exact="$Object.units.maxcount - $Object.units.count" />
							</do_if>
	
							<do_if value="$Unitcapacity">
								<add_units object="$Object" category="unitcategory.marine" mk="1" min="$Unitcapacity/2" max="$Unitcapacity"/>
							</do_if>
						</do_if>
					</do_if>
				</do_if>	
				<do_elseif value="$Object.isclass.[class.ship_m, class.ship_s]">
					<do_if  value="$Unitcapacity and $Object.primarypurpose == objectpurpose.mine and $Object.cargo.{ware.ore}.max or $Object.cargo.{ware.plasma}.max">
						<do_if value="$Object.cargo.{ware.ore}.max gt 0">
							<add_units object="$Object" category="unitcategory.orecollector" mk="2" exact="$Unitcapacity" /> 
						</do_if>
						<do_elseif  value="$Object.cargo.{ware.plasma}.max gt 0">
							<add_units object="$Object" category="unitcategory.gascollector" mk="2" exact="$Unitcapacity" /> 
						</do_elseif>
					</do_if>
				</do_elseif>	
				<do_elseif value="$Object.units.maxcount" chance="$Object.isclass.ship *100">
					<set_value name="$Unitcapacity" exact="[$Object.units.maxcount - $Object.units.count, 1000].min" />
					<do_if value="$Unitcapacity">
						<do_if value="$Object.cargo.{ware.ore}.max and $Object.cargo.{ware.plasma}.max and $Object.primarypurpose == objectpurpose.mine">
							<add_units object="$Object" macro="macro.units_size_drone_attackdrone_plasma_mk2_macro" min="$Unitcapacity/6/2" max="$Unitcapacity/6"/>
							<add_units object="$Object" macro="macro.units_size_drone_rubble_collector_mk2_macro" min="3" max="$Unitcapacity/6" chance="50"/>
							<add_units object="$Object" macro="macro.units_size_drone_rubble_collector_mk1_macro" min="3" max="$Unitcapacity/6"/>
							<add_units object="$Object" macro="macro.units_size_drone_liquid_collector_mk2_macro" min="3" max="$Unitcapacity/6" chance="50"/>
							<add_units object="$Object" macro="macro.units_size_drone_liquid_collector_mk1_macro" min="3" max="$Unitcapacity/6"/>
							<add_units object="$Object" macro="macro.units_size_xs_transp_empty_macro" min="1" max="$Unitcapacity/6/2"/>
							<add_units object="$Object" macro="macro.units_size_xs_welder_drone_macro" min="1" max="$Unitcapacity/6/2"/>
						</do_if>
						<do_elseif value="$Object.cargo.{ware.ore}.max and $Object.primarypurpose == objectpurpose.mine">
							<add_units object="$Object" macro="macro.units_size_drone_attackdrone_plasma_mk2_macro" min="$Unitcapacity/4/2" max="$Unitcapacity/4"/>
							<add_units object="$Object" macro="macro.units_size_drone_rubble_collector_mk2_macro" min="3" max="$Unitcapacity/4" chance="50"/>
							<add_units object="$Object" macro="macro.units_size_drone_rubble_collector_mk1_macro" min="3" max="$Unitcapacity/4"/>
							<add_units object="$Object" macro="macro.units_size_xs_transp_empty_macro" min="1" max="$Unitcapacity/4/2"/>
							<add_units object="$Object" macro="macro.units_size_xs_welder_drone_macro" min="1" max="$Unitcapacity/4/2"/>
						</do_elseif>
						<do_elseif value="$Object.cargo.{ware.plasma}.max and $Object.primarypurpose == objectpurpose.mine">
							<add_units object="$Object" macro="macro.units_size_drone_attackdrone_plasma_mk2_macro" min="$Unitcapacity/4/2" max="$Unitcapacity/4"/>
							<add_units object="$Object" macro="macro.units_size_drone_liquid_collector_mk2_macro" min="3" max="$Unitcapacity/4" chance="50"/>
							<add_units object="$Object" macro="macro.units_size_drone_liquid_collector_mk1_macro" min="3" max="$Unitcapacity/4"/>
							<add_units object="$Object" macro="macro.units_size_xs_transp_empty_macro" min="1" max="$Unitcapacity/4/2"/>
							<add_units object="$Object" macro="macro.units_size_xs_welder_drone_macro" min="1" max="$Unitcapacity/4/2"/>
						</do_elseif>
						<do_elseif value="$Object.primarypurpose == objectpurpose.build">
							<add_units object="$Object" macro="macro.units_size_drone_attackdrone_plasma_mk2_macro" min="$Unitcapacity/4/2" max="$Unitcapacity/4"/>
							<add_units object="$Object" macro="macro.units_size_xs_welder_drone_macro" min="$Unitcapacity/4" max="$Unitcapacity/4"/>
							<add_units object="$Object" macro="macro.units_size_xs_transp_empty_macro" min="$Unitcapacity/4/3" max="$Unitcapacity/4/2"/>
							<add_units object="$Object" macro="macro.units_size_drone_missiledrone_dumbfire_mk2_macro" min="$Unitcapacity/4/3" max="$Unitcapacity/4/2"/>
						</do_elseif>
						<do_elseif value="$Object.cargo.{ware.fusionreactor}.max or $Object.cargo.{ware.water}.max or $Object.cargo.{ware.energycells}.max or $Object.cargo.{ware.ore}.max">								
	
							<add_units object="$Object" macro="macro.units_size_drone_attackdrone_plasma_mk1_macro" min="5" max="$Unitcapacity/2/3"/>
							<add_units object="$Object" macro="macro.units_size_drone_attackdrone_impulse_mk1_macro" min="5" max="$Unitcapacity/2/3"/>
							<add_units object="$Object" macro="macro.units_size_drone_missiledrone_dumbfire_mk2_macro" min="5" max="$Unitcapacity/2/3"/>
							<add_units object="$Object" macro="macro.units_size_xs_welder_drone_macro" min="3" max="$Unitcapacity/2/2"/>
							<add_units object="$Object" macro="macro.units_size_xs_transp_empty_macro" min="5" max="$Unitcapacity/2/2"/>
						</do_elseif>
						<do_elseif value="$Object.primarypurpose == objectpurpose.fight or (not $Object.cargo.{ware.water}.max and not $Object.cargo.{ware.energycells}.max and not $Object.cargo.{ware.fusionreactor}.max and not $Object.cargo.{ware.ore}.max)">
							<add_units object="$Object" macro="macro.units_size_drone_attackdrone_plasma_mk2_macro" min="$Unitcapacity/7/2" max="$Unitcapacity/7" chance="50"/>
							<add_units object="$Object" macro="macro.units_size_drone_attackdrone_plasma_mk1_macro" min="$Unitcapacity/7/2" max="$Unitcapacity/7"/>
							<add_units object="$Object" macro="macro.units_size_drone_attackdrone_impulse_mk2_macro" min="$Unitcapacity/7/2" max="$Unitcapacity/7" chance="50"/>
							<add_units object="$Object" macro="macro.units_size_drone_attackdrone_impulse_mk1_macro" min="$Unitcapacity/7/2" max="$Unitcapacity/7"/>
							<add_units object="$Object" macro="macro.units_size_drone_missiledrone_dumbfire_mk2_macro" min="$Unitcapacity/7/2" max="$Unitcapacity/7" chance="50"/>
							<add_units object="$Object" macro="macro.units_size_drone_missiledrone_dumbfire_mk1_macro" min="$Unitcapacity/7/2" max="$Unitcapacity/7"/>		
	
							<add_units object="$Object" macro="macro.units_size_xs_welder_drone_macro" min="$Unitcapacity/7/2" max="$Unitcapacity/7"/>
							<add_units object="$Object" macro="macro.units_size_xs_transp_empty_macro" min="1" max="1"/>
						</do_elseif>
					</do_if>
				</do_elseif>
				<remove_value name="$Unitcapacity" />
				<remove_value name="$Object" />
				<debug_text text="'%1 processed [%2 / %3]'.[event.param2.knownname, event.param2.units.count, event.param2.units.maxcount]" filter="error" chance="0"/>
			</actions>
		</cue>

		<cue name="EWS_cue">
			<conditions>
				<check_any>
					<event_object_signalled object="player.computer" param="'CM_EWS'" />
					<event_object_signalled object="player.computer" param="'CM_EWS_SCOUT'" />
				</check_any>
				<check_value value="global.$nfconfig.$Check == 1" />
			</conditions>
			<delay exact="global.$nfconfig.$EWS_Delay"/>
			<!--<delay exact="120s" />-->
			<actions>
				<do_if value="event.param2?" negate="true">
					<debug_text text="'ERROR event.param2 missing'" filter="error" chance="0" />
				</do_if>
				<do_else>
					<do_if value="event.param" exact="'CM_EWS_SCOUT'">
						<write_to_logbook category="general" text="{40002,118}.[event.param2.{1}.name, event.param2.{2}.name]"/>
						<show_notification caption="{40002,17}" details="{40002,119}.[event.param2.{1}.name, event.param2.{2}.name]" timeout="5s" queued="true" priority="8" sound="ews"/>
						<!--<write_to_logbook category="general" text="{40002,19}.[event.param2.{1}, event.param2.{2}]"/>-->
						<signal_cue_instantly cue="md.Guidance.NewTarget" param="[event.param2.{1}, false, false]" chance="if player.primaryship.zone == event.param2.{1}.zone then 100 else 0" />
					</do_if>
					<do_else>
						<create_list name="$Zones"/>
						<find_ship name="$EnemyShip" class="[class.ship_l, class.ship_xl]" functional="true" space="event.param2.zone" multiple="true">
							<match_relation faction="faction.player" relation="enemy"/>
							<match_distance object="event.param2" max="30km"/>
							<match_any>
								<match primarypurpose="objectpurpose.fight"/>
							</match_any>
						</find_ship>
						<!-- check zero-->
						<do_if value="@$EnemyShip.count gt 0" >
							<do_if value="not $Zones.indexof.{event.param2.zone}">
								<append_to_list name="$Zones" exact="event.param2.zone" />
								<do_if value="global.$nfconfig.$EWS_Level lt 1">
									<set_value name="global.$nfconfig.$EWS_Level" exact="1" />
								</do_if>
								<do_if value="(@$EnemyShip.count gt global.$nfconfig.$EWS_Level_cutoff) and (event.param2.zone != player.primaryship.zone)" chance="((@$EnemyShip.count / (global.$nfconfig.$EWS_Level * 1.0f)) * 100)i" >		 
									<set_value name="$Loc" exact="event.param2.zone.name + ', ' + event.param2.zone.sector.knownname + ', ' + event.param2.zone.cluster.knownname"/>

									<show_notification caption="{40002,17}" details="{40002,18}.[$Loc]" timeout="3s" queued="true" priority="8" sound="ews">
										<interaction text="''" param="event.param2.zone" param2="'GiveMeTheMap'" />
									</show_notification>

									<write_to_logbook category="general" text="{40002,19}.[$Loc, $EnemyShip.count, $EnemyShip.{1}.name]"/>
								</do_if>
							</do_if>
						</do_if>
						<clear_list list="$Zones"/>
					</do_else>
				</do_else>

				<reset_cue cue="EWS_cue"/>
			</actions>
		</cue>
		<cue name="EWS_MapInteract_cue" instantiate="true">
			<conditions>
				<event_player_interaction param2="'GiveMeTheMap'"/>
				<check_value value="event.param.isclass.zone" />
			</conditions>
			<!--<delay exact="10ms"/>-->
			<actions>      
				<set_value name="$ZoneMap" exact="event.param" />
				<start_conversation actor="player.copilot" conversation="OpenMap"/>
			</actions>
			<cues>
				<cue name="OpenMap_cue">
					<conditions>
						<event_conversation_started conversation="OpenMap" />
					</conditions>
					<actions>
						<add_npc_line speaker="player.entity" line="1300" comment="give me the map"  />
						<do_if value="global.$nfconfig.$EWS_MapSector" >
							<open_conversation_menu menu="MapMenu" param="[0, 0, 'sector', $ZoneMap.sector, null, $ZoneMap]" />
						</do_if>
						<do_elseif value="not global.$nfconfig.$EWS_MapSector">
							<open_conversation_menu menu="MapMenu" param="[0, 0, 'zone', $ZoneMap]" />
						</do_elseif>
						<add_conversation_view view="closeupdetailmonitor" />
					</actions>
				</cue>
			</cues>
		</cue>

		<cue name="MM_defenceplatform_conv_outposts" instantiate="true">
			<conditions>
				<check_any>
					<event_conversation_next_section section="MMDP_conv_more"/>
					<event_conversation_returned_to_section section="MMDP_conv_more" />
				</check_any>
			</conditions>
			<actions>
				<add_player_choice text="'%1 %2'.[{1004,15}, macro.struct_bt_alb_outpost_macro.name]" selectable="player.entity.money ge 10000000Cr" tooltip="'%1: %2%3'.[{1001,2964}, [10000000Cr].{1}.formatted.default, {1001,101}]" section="mmdp_platform_do" choiceparam="['place', event.param2.{2}, macro.struct_bt_alb_outpost_macro, player.primaryship.owner, 10000000Cr, null]" chance="(player.primaryship.owner.hasrelation.enemy.{faction.xenon})*100"/>
				<add_player_choice text="'%1 %2'.[{1004,15}, macro.struct_at_xen_xenon_outpost_macro.name]" selectable="player.entity.money ge 10000000Cr" tooltip="'%1: %2%3'.[{1001,2964}, [10000000Cr].{1}.formatted.default, {1001,101}]" section="mmdp_platform_do" choiceparam="['place', event.param2.{2}, macro.struct_at_xen_xenon_outpost_macro, player.primaryship.owner, 10000000Cr, null]" chance="(not player.primaryship.owner.hasrelation.enemy.{faction.xenon})*100"/>
			</actions>
		</cue>


		<cue name="NF_LostTradeUpdates" instantiate="true">
			<conditions>
				<event_player_relation_changed/>
				<check_value value="event.object == null and event.param != null" />
				<check_value value="event.param2 le faction.player.relation.neutral.min" />
			</conditions>
			<actions>
				<find_station known="true" owner="event.param" multiple="true" space="player.galaxy" name="$todoStations" />
				<do_all exact="$todoStations.count" counter="$Count">
					<do_if value="$todoStations.{$Count}.hastradesubscription and $todoStations.{$Count}.trueowner.relationto.{faction.player} le faction.player.relation.neutral.min">
						<remove_trade_subscription object="$todoStations.{$Count}" />
					</do_if>
				</do_all>
				<remove_value name="$todoStations"/>
			</actions>
		</cue>

		<cue name="NF_kill_NPC" instantiate="true" namespace="this">
			<conditions>
				<event_cue_signalled/>
			</conditions>
			<actions>
				<do_if value="event.param.exists">
					<set_owner object="event.param" faction="faction.neutral"/>
					<destroy_object object="event.param"  explosion="false"/>
				</do_if>
			</actions>
		</cue>

		<cue name="NF_RemoveJOBS" instantiate="true" >
			<conditions>
				<event_game_loaded />
				<check_value value="global.$nfconfig? and not global.$nfconfig.$plotSafe?" />
			</conditions>
			<delay min="48s" max="60s"/>
			<actions>
				<find_ship name="$temp_ships" multiple="true" space="player.galaxy" class="[class.ship_xl, class.ship_l, class.ship_m, class.ship_s]" recursive="true" functional="true"/>

				<set_value name="$temp_results" exact="table[
							$trader = 0,
							$patrol = 0,
							$escorts = 0,
							$unknown = 0,
							$unknownC = 0,
							$build = 0,
							$mine = 0,
							$plunder = 0,
							$nothing = 0,

							$station = 0,
							$job = 0,
							$corpJob = 0,

							$ship_xl = 0,
							$ship_l = 0,
							$ship_m = 0,
							$ship_s = 0
				]" />

				<set_value name="$temp_important" exact="0"/>

				<create_list name="$temp_jobs" />
				<create_group groupname="$temp_toDestroy" />

				<do_all exact="$temp_ships.count" counter="$s">
					<do_if value="$temp_ships.{$s}.exists and $temp_ships.{$s}.isoperational" negate="true">
						<continue />
					</do_if>

					<set_value name="$temp_results.{'$%1'.[$temp_ships.{$s}.class]}" operation="add"/>

					<do_if value="$temp_ships.{$s}.pilot.$whatido?"> 
						<do_if value="$temp_ships.{$s}.pilot.$whatido" list="['trade.ship', 'trade.ship.ranged']">
							<do_if value="$temp_ships.{$s}.commander and $temp_ships.{$s}.commander.isclass.station">
								<set_value name="$temp_results.$station" operation="add"/>
								<set_value name="$temp_results.$trader" operation="add"/>
							</do_if>
							<do_else>
								<set_value name="$temp_results.$trader" operation="add"/>
							</do_else>
							<do_if value="$temp_ships.{$s}.defencenpc">
								<do_if value="$temp_ships.{$s}.defencenpc.$config_attackenemies?">
									<remove_value name="$temp_ships.{$s}.defencenpc.$config_attackenemies" />
									<signal_objects object="$temp_ships.{$s}.defencenpc" param="'update config'"  />
								</do_if>
								<do_else>
									<signal_objects object="$temp_ships.{$s}.defencenpc" param="'stop attack'"  />
								</do_else>
							</do_if>
						</do_if>
						<do_elseif value="$temp_ships.{$s}.pilot.$whatido" list="['move.patrol', 'BR.move.patrol', 'move.patrol.route']">
							<set_value name="$temp_results.$patrol" operation="add"/>
						</do_elseif>
						<do_elseif value="$temp_ships.{$s}.pilot.$whatido" list="['mining.ship.free', 'mining.ship.station', 'mining.ship.player']">
							<do_if value="$temp_ships.{$s}.commander and $temp_ships.{$s}.commander.isclass.station">
								<set_value name="$temp_results.$station" operation="add"/>
								<set_value name="$temp_results.$mine" operation="add"/>
							</do_if>
							<do_else>
								<set_value name="$temp_results.$mine" operation="add"/>
							</do_else>
							<do_if value="$temp_ships.{$s}.defencenpc">
								<do_if value="$temp_ships.{$s}.defencenpc.$config_attackenemies?">
									<remove_value name="$temp_ships.{$s}.defencenpc.$config_attackenemies" />
									<signal_objects object="$temp_ships.{$s}.defencenpc" param="'update config'"  />
								</do_if>
								<do_else>
									<signal_objects object="$temp_ships.{$s}.defencenpc" param="'stop attack'"  />
								</do_else>
							</do_if>
						</do_elseif>
						<do_elseif value="$temp_ships.{$s}.pilot.$whatido" list="['move.plunder']">
							<set_value name="$temp_results.$plunder" operation="add"/>
						</do_elseif>
						<do_elseif value="$temp_ships.{$s}.pilot.$whatido" list="['move.escort', 'BR.move.escort', 'carrier.default']">
							<set_value name="$temp_results.$escorts" operation="add"/>
						</do_elseif>
						<do_elseif value="$temp_ships.{$s}.pilot.$whatido" list="['move.buildership']">
							<set_value name="$temp_results.$build" operation="add"/>
							<do_if value="$temp_ships.{$s}.defencenpc">
								<do_if value="$temp_ships.{$s}.defencenpc.$config_attackenemies?">
									<remove_value name="$temp_ships.{$s}.defencenpc.$config_attackenemies" />
									<signal_objects object="$temp_ships.{$s}.defencenpc" param="'update config'"  />
								</do_if>
								<do_else>
									<signal_objects object="$temp_ships.{$s}.defencenpc" param="'stop attack'"  />
								</do_else>
							</do_if>
						</do_elseif>
						<do_elseif value="$temp_ships.{$s}.pilot.$whatido" list="['move.idle']">
							<set_value name="$temp_results.$nothing" operation="add"/>
							<do_if value="$temp_ships.{$s}.defencenpc">
								<do_if value="$temp_ships.{$s}.defencenpc.$config_attackenemies?">
									<remove_value name="$temp_ships.{$s}.defencenpc.$config_attackenemies" />
									<signal_objects object="$temp_ships.{$s}.defencenpc" param="'update config'"  />
								</do_if>
								<do_else>
									<signal_objects object="$temp_ships.{$s}.defencenpc" param="'stop attack'"  />
								</do_else>
							</do_if>
						</do_elseif>
						<do_else>
							<set_value name="$temp_results.$unknownC" operation="add"/>
						</do_else>
					</do_if> 
					<do_elseif value="not $temp_ships.{$s}.pilot.$whatido? and $temp_ships.{$s}.primarypurpose == objectpurpose.build and $temp_ships.{$s}.buildmodule.buildanchor.exists">
						<set_value name="$temp_results.$build" operation="add"/>
					</do_elseif>
					<do_elseif value="$temp_ships.{$s}.isplayerowned">
						<do_if value="@$temp_ships.{$s}.pilot.command.value" list="[command.freemining, command.freetrade, command.collect, command.mining, command.trade]">
							<do_if value="$temp_ships.{$s}.defencenpc">
								<do_if value="$temp_ships.{$s}.defencenpc.$config_attackenemies?">
									<remove_value name="$temp_ships.{$s}.defencenpc.$config_attackenemies" />
									<signal_objects object="$temp_ships.{$s}.defencenpc" param="'update config'"  />
								</do_if>
								<do_else>
									<signal_objects object="$temp_ships.{$s}.defencenpc" param="'stop attack'"  />
								</do_else>
							</do_if>
						</do_if>
					</do_elseif>
					<do_else>
						<do_if value="@$temp_ships.{$s}.pilot.command.value" list="[command.patrol]">
							<set_value name="$temp_results.$patrol" operation="add"/>
						</do_if>
						<do_elseif value="@$temp_ships.{$s}.pilot.command.value" list="[command.escort, command.protect]">
							<set_value name="$temp_results.$escorts" operation="add"/>
						</do_elseif>
						<do_elseif value="$temp_ships.{$s}.commander.exists and $temp_ships.{$s}.pilot.$carrier?">
							<set_value name="$temp_results.$escorts" operation="add"/>
						</do_elseif>
						<do_else>
							<set_value name="$temp_results.$unknown" operation="add"/>
						</do_else>

						<do_if value="$temp_ships.{$s}.isjobship and $temp_ships.{$s}.trueowner and global.$factionCEOs.{'$' + $temp_ships.{$s}.trueowner.id}?">
							<set_value name="$temp_results.$corpJob" operation="add"/>
	
							<do_if value="$temp_ships.{$s}.ismasstraffic">
								<continue />
							</do_if>
							<do_elseif value="$temp_ships.{$s}.ismission">
								<continue />
							</do_elseif>
							<do_elseif value="$temp_ships.{$s}.job and $temp_jobs.indexof.{$temp_ships.{$s}.job} == 0">
								<append_to_list name="$temp_jobs" exact="$temp_ships.{$s}.job"/>
							</do_elseif>
	
							<do_if value="true" chance="$temp_important" comment="remove immediately">
								<get_control_entities object="$temp_ships.{$s}" groupname="$ControlEntities"/>
								<do_all exact="$ControlEntities.count" counter="$Counter">
									<abort_scripts entity="$ControlEntities.{$Counter}"/>
								</do_all>
								<remove_value name="$ControlEntities" />
							</do_if>
	
							<add_to_group groupname="$temp_toDestroy" object="$temp_ships.{$s}" />
						</do_if>
						<do_elseif value="$temp_ships.{$s}.isjobship">
							<set_value name="$temp_results.$job" operation="add"/>
							<do_if value="@$temp_ships.{$s}.pilot.command.value" list="[command.freemining, command.freetrade, command.collect, command.mining, command.trade]">
								<do_if value="$temp_ships.{$s}.defencenpc">
									<do_if value="$temp_ships.{$s}.defencenpc.$config_attackenemies?">
										<remove_value name="$temp_ships.{$s}.defencenpc.$config_attackenemies" />
										<signal_objects object="$temp_ships.{$s}.defencenpc" param="'update config'"  />
									</do_if>
									<do_else>
										<signal_objects object="$temp_ships.{$s}.defencenpc" param="'stop attack'"  />
									</do_else>
								</do_if>
							</do_if>
						</do_elseif>
					</do_else>
				</do_all>

				<do_all exact="$temp_jobs.count" counter="$x">
					<substitute_text text="$testJobId" source="$temp_jobs.{$x}" >
						<replace string="'escort'" with="'match'" />
					</substitute_text>
					<do_if value="$testJobId != $temp_jobs.{$x}" >
						<!-- escorts only active with mainjobs -->
					</do_if>
					<do_else>
						<set_job_active job="$temp_jobs.{$x}" activate="false" />
					</do_else>
					<remove_value name="$testJobId" />
				</do_all>

				<debug_text text="'UniShips[%1] jbs%2=%4 :: %3'.[$temp_ships.count, $temp_jobs.count, $temp_results, $temp_toDestroy.list.count]" filter="scripts_verbose" chance="0" />

				<do_all exact="$temp_toDestroy.list.count" counter="$Counter" reverse="true" chance="$temp_important" comment="remove immediately">
					<destroy_object object="$temp_toDestroy.list.{$Counter}"/>
				</do_all>

				<remove_value name="$temp_jobs" />
				<remove_value name="$temp_results" />
				<remove_value name="$temp_ships" />
				<remove_value name="$temp_toDestroy" />
				<remove_value name="$temp_important" />
			</actions>
		</cue>

		<cue name="NF_Autorepair_SkunkAndDrones" instantiate="true" >
			<conditions>
				<event_object_docked object="player.primaryship" />
				<check_value value="event.param.isplayerowned" />
				<check_value value="global.$nfconfig? and @global.$nfconfig.$cheatRestoreSkunk" />
				<check_any>
					<check_value value="event.param.engineer.exists" />
					<check_value value="player.primaryship.engineer.exists" />
				</check_any>
				<check_value value="player.primaryship.drones.count" />
			</conditions>
			<delay min="10s" max="15s"/>
			<actions>
				<do_if value="player.primaryship.hullpercentage lt 100">
					<restore_object object="player.primaryship" hull="100" recursive="true" />
				</do_if>
				<do_all exact="player.primaryship.drones.count" counter="$i">
					<do_if value="player.primaryship.drones.{$i}.hullpercentage lt 100">
						<restore_object object="player.primaryship.drones.{$i}" hull="100" recursive="true" />
					</do_if>
				</do_all>
			</actions>
		</cue>

		<cue name="NF_BASE_SY_RES" instantiate="true" namespace="this">
			<conditions>
				<event_object_signalled object="player.galaxy" param="'do.cheat.waredelivery'" />
			</conditions>
			<delay min="10s" max="35s"/>
			<actions>
				<!-- faction -->
				<set_value name="$faction" exact="faction.acmecorp" />
				<do_if value="event.param2? and typeof event.param2 == datatype.list">
					<!-- basics -->
					<set_value name="$targetStation" exact="event.param2.{1}" />
					<set_value name="$requiredWare" exact="event.param2.{2}" />
					<set_value name="$maxWare" exact="(event.param2.{3})i" />
					<!-- startzone -->
					<find_zone name="$spawnZones" space="$targetStation.sector" tempzone="false" mapzone="true" multiple="true" />
					<set_value name="$spawnZone" exact="$spawnZones.random" />
					<do_all exact="$spawnZones.count" counter="$k">
						<do_if value="$spawnZones.{$k} != player.primaryship.zone and $spawnZones.{$k} != $targetStation.zone" >
							<set_value name="$spawnZone" exact="$spawnZones.{$k}" />
							<break />
						</do_if>
					</do_all>
					<remove_value name="$spawnZones"/>
					<!-- Shiptype -->
					<do_if value="$requiredWare.volume and ($requiredWare.volume * $maxWare)i le 25000">
						<set_value name="$ref" exact="macro.units_size_m_universal_transport_macro"/>
					</do_if>
					<do_elseif value="$requiredWare.volume and ($requiredWare.volume * $maxWare)i gt 600000">
						<set_value name="$ref" exact="macro.units_size_xl_kit_cargo_01_macro"/>
					</do_elseif>
					<do_else>
						<set_value name="$ref" exact="macro.units_size_xl_cs_omicron_ship_04_mk2_macro"/>
					</do_else>
					<!-- spawn -->
					<set_value name="$Elite" />
					<set_value name="$clearAll" />
					<include_actions ref="md.MM_Corps__Data.MMCData_ship_spawner" />
					<do_if value="$createdShip.exists">
						<!-- add ware -->
						<add_cargo ware="$requiredWare" object="$createdShip" exact="[$createdShip.cargo.{$requiredWare}.max, $maxWare].min" />
						<!-- start AI -->
						<start_script object="$createdShip.pilot" name="'trade.ship.deliveronce'">
							<param name="target" value="$targetStation"/>
							<param name="warelist" value="[$requiredWare]"/>
						</start_script>
					</do_if>
				</do_if>
				<!-- clean -->
				<remove_value name="$createdShip"/>
				<remove_value name="$targetStation"/>
				<remove_value name="$requiredWare"/>
				<remove_value name="$maxWare"/>
				<remove_value name="$faction"/>
			</actions>
		</cue>
		<!--
		<set_value name="$temp_select" exact="['group', race., tag., 'ref']" />
		<set_value name="$temp_object" exact="$Object" />
		<set_value name="$temp_faction" exact="$temp_object.trueowner" comment="optional"/>
		<set_value name="$temp_entitytype" exact="entitytype.marine" />
		<set_value name="$temp_dock" exact="$ObjectDock" comment="optional"/>
		<set_value name="$temp_Skill" exact="
			[	
				[skilltype.leadership,	'random', 3, 5],
				[skilltype.navigation,	'random', 3, 5],
				[skilltype.combat,		'random', 3, 5],
				[skilltype.engineering,	'random', 3, 5],
				[skilltype.management,	'random', 3, 5],
				[skilltype.morale,		'random', 3, 5],
				[skilltype.science,		'random', 3, 5]
			]" comment="optional / true or false"/>
		<set_value name="$temp_assign" exact="'pilot'" comment="optional / pilot, defence, engineer, marine, architect, manager, control"/>
		<set_value name="$temp_script" exact="'default'" comment="optional"/>
		<include_actions ref="md.NF_BASE.NF_create_actor" />
		<remove_value name="$newActor"/>
		-->
		<library name="NF_create_actor">
			<actions>
				<set_value name="$newActor" exact="null"/>
				<do_if value="$temp_faction?" negate="true">
					<set_value name="$temp_faction" exact="$temp_object.trueowner" />
				</do_if>
				<do_if value="$temp_assign? and $temp_assign and not ($temp_script? and $temp_script)">
					<set_value name="$temp_script" exact="'default'" />
				</do_if>

				<do_if value="$temp_dock? and $temp_dock and ['pilot', 'defence', 'engineer', 'manager'].indexof.{$temp_assign} and @$temp_select.{2} and [race.argon, race.split, race.terran, race.teladi].indexof.{$temp_select.{2}}" chance="0">
					<!-- -->
					<set_value name="$temp_setCueChance" exact="0" />
				</do_if>
				<do_else>
					<set_value name="$temp_setCueChance" exact="100" />

					<do_if value="@$temp_select.{1}">
						<create_cue_actor name="$tempActor" cue="this">
							<select group="$temp_select.{1}"/>
							<owner exact="$temp_faction"/>
						</create_cue_actor>
					</do_if>
					<do_elseif value="@$temp_select.{2} and @$temp_select.{3}">
						<include_actions ref="md.NF_BASE.NF_create_actor_race"/>
						<create_cue_actor name="$tempActor" cue="this">
							<select race="$temp_select.{2}" tags="$temp_select.{3}"/>
							<owner exact="$temp_faction"/>
						</create_cue_actor>
					</do_elseif>
					<do_elseif value="@$temp_select.{4}">
						<create_cue_actor name="$tempActor" cue="this">
							<select ref="$temp_select.{4}"/>
							<owner exact="$temp_faction"/>
						</create_cue_actor>
					</do_elseif>
					<do_else>
						<include_actions ref="md.NF_BASE.NF_create_actor_race" />
						<create_cue_actor name="$tempActor" cue="this">
							<select race="if @$temp_select.{2} then $temp_select.{2} else if $temp_faction.id == 'player' then race.argon else race.{$temp_faction.id}" tags="if @$temp_select.{3} then $temp_select.{3} else tag.{$temp_entitytype}"/>
							<owner exact="$temp_faction"/>
						</create_cue_actor>
					</do_else>
	
					<do_if value="$tempActor" negate="true" comment="fallback">
						<create_cue_actor name="$tempActor" cue="this">
							<select race="race.argon" tags="if @$temp_select.{3} then $temp_select.{3} else tag.{$temp_entitytype}"/>
							<owner exact="$temp_faction"/>
						</create_cue_actor>
					</do_if>
					
					<do_if value="$tempActor">
						<set_entity_type entity="$tempActor" type="$temp_entitytype"/>
		
						<do_if value="$temp_dock? and $temp_dock">
							<add_actor_to_platform actor="$tempActor" dockingbay="$temp_dock.component"/>
						</do_if>
						<do_else>
							<add_actor_to_room actor="$tempActor" object="$temp_object" />
						</do_else>
					</do_if>
				</do_else>

				<do_if value="$tempActor">
					<include_actions ref="md.NF_BASE.NF_skill_actor" />
			
					<do_if value="$temp_assign" exact="'pilot'">
						<assign_pilot actor="$tempActor" object="$temp_object" />
					</do_if>
					<do_elseif value="$temp_assign" exact="'defence'">
						<assign_defence_manager actor="$tempActor" object="$temp_object" />
					</do_elseif>
					<do_elseif value="$temp_assign" exact="'engineer'">
						<assign_engineer actor="$tempActor" object="$temp_object" />
					</do_elseif>
					<do_elseif value="$temp_assign" exact="'architect'">
						<assign_architect actor="$tempActor" object="$temp_object" />
						<signal_cue_instantly cue="md.NPC_Architect.Base" param="[$tempActor, false, true]"/>
						<signal_cue_instantly cue="md.NPC_Architect_nP.Base" param="[$tempActor, false, true]"/>
					</do_elseif>
					<do_elseif value="$temp_assign" exact="'marine'">
						<assign_boarding_commander actor="$tempActor" object="$temp_object" />
					</do_elseif>
					<do_elseif value="$temp_assign" exact="'manager'">
						<assign_trade_manager actor="$tempActor" object="$temp_object" />
					</do_elseif>
					<do_elseif value="$temp_assign" exact="'control'">
						<assign_control_entity actor="$tempActor" object="$temp_object" />
					</do_elseif>

					<do_if value="global.$factionCEOs.{'$' + $temp_faction.id}? and ['manager','architect','pilot'].indexof.{$temp_assign} ">
						<share_actor_account actor="$tempActor" otherobject="global.$factionCEOs.{'$' + $temp_faction.id}"/>
					</do_if>

					<do_if value="$temp_script? and $temp_script == 'default'">
						<do_if value="$temp_assign" exact="'pilot'">
							<start_script object="$tempActor" name="'player.default'" chance="$temp_object.isplayerowned*100"/>
						</do_if>
						<do_elseif value="$temp_assign" exact="'defence'">
							<start_script object="$tempActor" name="if $temp_object.isclass.ship then 'fight.defend.capital' else if $temp_faction == faction.player then 'fight.station.player' else 'fight.attack.object'"/>
						</do_elseif>
						<do_elseif value="$temp_assign" exact="'engineer'">
							<!--start_script object="$tempActor" name="'engineer.ai'"/-->
							<start_script object="$tempActor" name="'engineer.ai.plus2'"/>
						</do_elseif>
						<do_elseif value="$temp_assign" exact="'manager'">
							<do_if value="$temp_object.canbuildships">
								<start_script object="$tempActor" name="'trade.shipyard'"/>
							</do_if>
							<do_elseif value="$temp_object.canproduceships">
								<start_script object="$tempActor" name="'trade.shipyard.small'"/>
							</do_elseif>
							<do_elseif value="$temp_object.isplayerowned">
								<start_script object="$tempActor" name="'trade.station.player'"/>
							</do_elseif>
							<do_else>
								<start_script object="$tempActor" name="'trade.station'"/>
							</do_else>
						</do_elseif>
					</do_if>
	
					<set_value name="$newActor" exact="$tempActor"/>
					<remove_cue_actor actor="$tempActor" cue="this" chance="$temp_setCueChance"/>
				</do_if>

				<remove_value name="$temp_setCueChance"/>
				<remove_value name="$temp_script"/>
				<remove_value name="$temp_assign"/>
				<remove_value name="$temp_select"/>
				<remove_value name="$temp_object"/>
				<remove_value name="$temp_faction"/>
				<remove_value name="$temp_entitytype"/>
				<remove_value name="$temp_dock"/>
				<remove_value name="$temp_Skill"/>
			</actions>
		</library>

		<!--
		<set_value name="$tempActor" exact="$Object" />
		<set_value name="$temp_Skill" exact="
			[	
				[skilltype.leadership,	'random', 3, 5],
				[skilltype.navigation,	'random', 3, 5],
				[skilltype.combat,		'random', 3, 5],
				[skilltype.engineering,	'random', 3, 5],
				[skilltype.management,	'random', 3, 5],
				[skilltype.morale,		'random', 3, 5],
				[skilltype.science,		'random', 3, 5]
			]" />
		<include_actions ref="md.NF_BASE.NF_skill_actor" />
		<remove_value name="$tempActor"/>
		<remove_value name="$temp_Skill"/>
		-->
		<library name="NF_skill_actor">
			<actions>
				<do_if value="$temp_Skill? and typeof $temp_Skill == datatype.list">
					<!-- fine -->
				</do_if>
				<do_elseif value="$temp_Skill? and $temp_Skill == 'max'">
					<set_value name="$temp_Skill" exact="
						[	
							[skilltype.leadership,	'exact'],
							[skilltype.navigation,	'exact'],
							[skilltype.combat,		'exact'],
							[skilltype.engineering,	'exact'],
							[skilltype.management,	'exact'],
							[skilltype.morale,		'exact'],
							[skilltype.science,		'exact']
						]" />
				</do_elseif>
				<do_elseif value="$temp_Skill? and $temp_Skill">
					<set_value name="$temp_Skill" exact="
						[	
							[skilltype.leadership,	'random', 3, 5],
							[skilltype.navigation,	'random', 3, 5],
							[skilltype.combat,		'random', 3, 5],
							[skilltype.engineering,	'random', 3, 5],
							[skilltype.management,	'random', 3, 5],
							[skilltype.morale,		'random', 3, 5],
							[skilltype.science,		'random', 3, 5]
						]" />
				</do_elseif>
				<do_elseif value="$temp_Skill? and not $temp_Skill">
					<remove_value name="$temp_Skill"/>
					<create_list name="$temp_Skill"/>
				</do_elseif>
				<do_else>
					<set_value name="$temp_Skill" exact="
						[	
							[skilltype.leadership,	'random', 1, 3],
							[skilltype.navigation,	'random', 1, 3],
							[skilltype.combat,		'random', 1, 3],
							[skilltype.engineering,	'random', 1, 3],
							[skilltype.management,	'random', 1, 3],
							[skilltype.morale,		'random', 1, 3],
							[skilltype.science,		'random', 1, 3]
						]" />
				</do_else>

				<do_all exact="$temp_Skill.count" counter="$k">
					<do_if value="$temp_Skill.{$k}.{2}" exact="'random'">
						<set_value name="$skillvalue" min="if $temp_Skill.{$k}.{3}? then $temp_Skill.{$k}.{3} else 1" max="if $temp_Skill.{$k}.{4}? then $temp_Skill.{$k}.{4} else 5" />
					</do_if>
					<do_elseif value="$temp_Skill.{$k}.{2}" exact="'exact'">
						<set_value name="$skillvalue" exact="if $temp_Skill.{$k}.{3}? then $temp_Skill.{$k}.{3} else 5" />
					</do_elseif>
					<do_else>
						<set_value name="$skillvalue" min="if $temp_Skill.{$k}.{3}? then $temp_Skill.{$k}.{3} else 1" max="if $temp_Skill.{$k}.{4}? then $temp_Skill.{$k}.{4} else 3" />
					</do_else>

					<do_if value="typeof $temp_Skill.{$k}.{1} == datatype.skilltype and $skillvalue ge 0 and $skillvalue le 5">
						<set_skill entity="$tempActor" type="$temp_Skill.{$k}.{1}" exact="$skillvalue"/>
					</do_if>
				</do_all>
			</actions>
		</library>

		<!--
		<set_value name="$temp_faction" exact="faction.player" />
		<set_value name="$temp_select" exact="['group', race., tag., 'ref']" />
		<include_actions ref="md.NF_BASE.NF_create_actor_race" />
		-->
		<library name="NF_create_actor_race">
			<actions>
				<set_value name="$temp_factionId" exact="$temp_faction.id" />

				<do_if value="$temp_select? and typeof $temp_select == datatype.list" negate="true">
					<set_value name="$temp_select" exact="[null, null, null]" />
				</do_if>

				<do_if value="$temp_entitytype? and $temp_entitytype == entitytype.architect">
					<set_value name="$temp_select.{2}" exact="race.argon" />
				</do_if>
				<do_elseif value="$temp_select.{3}? and $temp_select.{3} == tag.architect">
					<set_value name="$temp_select.{2}" exact="race.argon" />
				</do_elseif>
				<do_elseif value="$temp_factionId" list="['familyryak']">
					<set_value name="$temp_select.{2}" exact="race.split" />
				</do_elseif>
				<do_elseif value="$temp_factionId" list="['teladi','teladidrugrunner','teladigunrunner']">
					<set_value name="$temp_select.{2}" exact="race.teladi" />
				</do_elseif>
				<do_elseif value="$temp_factionId" list="['xenon', 'khaak']">
					<set_value name="$temp_select.{2}" exact="race.{$temp_factionId}" />
				</do_elseif>
				<do_elseif value="$temp_factionId" list="['terran','heartofalbion','wholesomefoods','canteran','beryll','nolimits','leddaindustrial','albionenergy']">
					<do_any>
						<set_value name="$temp_select.{2}" exact="race.argon" weight="40"/>
						<set_value name="$temp_select.{2}" exact="race.split" weight="10"/>
						<set_value name="$temp_select.{2}" exact="race.terran" weight="20"/>
						<set_value name="$temp_select.{2}" exact="race.teladi" weight="30"/>
					</do_any>
				</do_elseif>
				<do_elseif value="$temp_factionId" list="['atlas','sovereignsyndicate','reivers']">
					<set_value name="$temp_select.{2}" exact="[race.argon, race.terran].random" />
				</do_elseif>
				<do_elseif value="$temp_factionId" list="['hereticvanguards']">
					<set_value name="$temp_select.{2}" exact="[race.argon, race.split, race.terran].random" />
				</do_elseif>
				<do_elseif value="$temp_factionId" list="['sonraenergy','aquarius','frantonpharma','chow']">
					<set_value name="$temp_select.{2}" exact="[race.argon, race.split, race.terran, race.teladi].random" />
				</do_elseif>
				<do_elseif value="$temp_factionId" list="['argongovernment','jonferson','terracorp','plutarch']">
					<set_value name="$temp_select.{2}" exact="race.argon" />
				</do_elseif>
				<remove_value name="$temp_factionId"/>
			</actions>
		</library>

	</cues>
</mdscript>
